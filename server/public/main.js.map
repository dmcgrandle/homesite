{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_classes/user-classes.ts","webpack:///./src/app/_helpers/equal-validator.ts","webpack:///./src/app/_helpers/jwt-interceptor.ts","webpack:///./src/app/_helpers/secure.pipe.ts","webpack:///./src/app/_services/auth.service.ts","webpack:///./src/app/_services/media.service.ts","webpack:///./src/app/_services/url-helper.service.ts","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.scss","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/alert-message-dialog/alert-message-dialog.component.html","webpack:///./src/app/alert-message-dialog/alert-message-dialog.component.scss","webpack:///./src/app/alert-message-dialog/alert-message-dialog.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.config.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/change-password/change-password.component.html","webpack:///./src/app/change-password/change-password.component.scss","webpack:///./src/app/change-password/change-password.component.ts","webpack:///./src/app/downloads/downloads.component.html","webpack:///./src/app/downloads/downloads.component.scss","webpack:///./src/app/downloads/downloads.component.ts","webpack:///./src/app/edit-user-dialog/edit-user-dialog.component.html","webpack:///./src/app/edit-user-dialog/edit-user-dialog.component.scss","webpack:///./src/app/edit-user-dialog/edit-user-dialog.component.ts","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.scss","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/forgot-dialog/forgot-dialog.component.html","webpack:///./src/app/forgot-dialog/forgot-dialog.component.scss","webpack:///./src/app/forgot-dialog/forgot-dialog.component.ts","webpack:///./src/app/gallery-photo-albums/gallery-photo-albums.component.html","webpack:///./src/app/gallery-photo-albums/gallery-photo-albums.component.scss","webpack:///./src/app/gallery-photo-albums/gallery-photo-albums.component.ts","webpack:///./src/app/gallery-photo-photos/gallery-photo-photos.component.html","webpack:///./src/app/gallery-photo-photos/gallery-photo-photos.component.scss","webpack:///./src/app/gallery-photo-photos/gallery-photo-photos.component.ts","webpack:///./src/app/gallery-video-albums/gallery-video-albums.component.html","webpack:///./src/app/gallery-video-albums/gallery-video-albums.component.scss","webpack:///./src/app/gallery-video-albums/gallery-video-albums.component.ts","webpack:///./src/app/gallery/gallery.component.html","webpack:///./src/app/gallery/gallery.component.scss","webpack:///./src/app/gallery/gallery.component.ts","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.scss","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/manage-users/manage-users.component.html","webpack:///./src/app/manage-users/manage-users.component.scss","webpack:///./src/app/manage-users/manage-users.component.ts","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.scss","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.scss","webpack:///./src/app/register/register.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","// user-classes.ts - Declaration of User class\n// Note - I have the constructors setting initial values so all instances\n// are set up with fields in the same order every time.\n\nexport class User {\n  _id : number;\n  name : string;        // Full Name: eg: \"John Doe\"\n  username : string;    // login name: eg: \"john\"\n  password : string;\n  email : string;\n  level : number;\n\n  constructor () {\n    this._id = -1;\n    this.name = '';\n    this.username = '';\n    this.password = '';\n    this.email = '';\n    this.level = 0;\n  }\n};\n","import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, Validator, FormGroup, ValidatorFn } from '@angular/forms';\n\n// Set up the directive for a custom form validation - \"password\" and \"retype\" password.\n// Using template driven forms, so need a custom @Directive to create a selector for use\n// in the form.  Note: this selector is applied as an attribute in the form GROUP \n// (note the ngModelGroup=\"passGroup\" in the template).  That way all the formGroup input\n// fields will be sent in the FormControl object injected into the function within the \n// factory - yeah, the syntax is a bit confusing for this...\n@Directive({\n    selector: '[equal]',\n    providers: [{provide: NG_VALIDATORS, useExisting: EqualDirective, multi: true}]\n  })\n  // This class has one property, a constructor that sets that property, and the required\n  // validate() function (required by the Validator interface).\n  export class EqualDirective implements Validator {\n    validator: ValidatorFn;\n    constructor () {\n      this.validator = validateEqualFactory();\n    }\n    validate(c: FormGroup) {\n      return this.validator(c);\n    }\n  }\n  \n  // This factory function simply returns a function.  The inner function is the one that\n  // has the FormGroup object injected into it - note it is a FormGroup object because we\n  // need both the password AND the retry passed to us (these are the only two elements in\n  // the ngModelGroup=\"passGroup\") in order to compare them.  This can be used generically\n  // though, so I map password -> \"first\" and retry -> \"second\".\n  function validateEqualFactory() : ValidatorFn {\n    return (c: FormGroup) => {\n      const [first, second] = Object.keys(c.value || {}); // Deconstruct array syntax\n      return ((c.value[first] == c.value[second])) ? null : { equal: {valid: false}};\n    }\n  }","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { AuthService } from '../_services/auth.service';\nimport { Observable } from 'rxjs';\n\n@Injectable()\n\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(public auth: AuthService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    const token = this.auth.getToken();\n\n    const newRequest = request.clone({\n      headers: request.headers.set('Authorization', `Bearer ${token}`)\n    });\n    return next.handle(newRequest);\n  }\n\n}\n","import { Pipe, PipeTransform, OnDestroy, WrappedValue, ChangeDetectorRef } from '@angular/core';\nimport { Observable, Subscription, BehaviorSubject, pipe, of } from 'rxjs';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { UrlHelperService } from '../_services/url-helper.service';\n\n@Pipe({\n  name: 'secure',\n  pure: false\n})\nexport class SecurePipe implements PipeTransform, OnDestroy {\n\n  private _latestValue: any = null;\n  private _latestReturnedValue: any = null;\n  private _subscription: Subscription = null;\n  private _obj: Observable<any> = null;\n\n  private previousUrl: string;\n  private _result: BehaviorSubject<any> = new BehaviorSubject('');\n  private result: Observable<any> = this._result.asObservable();\n  private _internalSubscription: Subscription = null;\n\n  constructor(\n      private _ref: ChangeDetectorRef,\n      private urlHelperService: UrlHelperService,\n      private sanitizer: DomSanitizer\n  ) { }\n\n  ngOnDestroy(): void {\n      if (this._subscription) {\n          this._dispose();\n      }\n  }\n\n  transform(url: string): any {\n      let obj = this.internalTransform(url);\n      return this.asyncTrasnform(obj);\n  }\n\n  private internalTransform(url: string): Observable<any> {\n      if (!url) {\n          return this.result;\n      }\n\n      if (this.previousUrl !== url) {\n          this.previousUrl = url;\n          this._internalSubscription = this.urlHelperService.get(url).subscribe(m => {\n              let sanitized = this.sanitizer.bypassSecurityTrustUrl(m);\n              this._result.next(sanitized);\n          });\n      }\n\n      return this.result;\n  }\n\n  private asyncTrasnform(obj: Observable<any>): any {\n      if (!this._obj) {\n          if (obj) {\n              this._subscribe(obj);\n          }\n          this._latestReturnedValue = this._latestValue;\n          return this._latestValue;\n      }\n      if (obj !== this._obj) {\n          this._dispose();\n          return this.asyncTrasnform(obj);\n      }\n      if (this._latestValue === this._latestReturnedValue) {\n          return this._latestReturnedValue;\n      }\n      this._latestReturnedValue = this._latestValue;\n      return WrappedValue.wrap(this._latestValue);\n  }\n\n  private _subscribe(obj: Observable<any>) {\n      var _this = this;\n      this._obj = obj;\n\n      this._subscription = obj.subscribe({\n          next: function (value) {\n              return _this._updateLatestValue(obj, value);\n          }, error: (e: any) => { throw e; }\n      });\n  }\n\n  private _dispose() {\n      this._subscription.unsubscribe();\n      this._internalSubscription.unsubscribe();\n      this._internalSubscription = null;\n      this._latestValue = null;\n      this._latestReturnedValue = null;\n      this._subscription = null;\n      this._obj = null;\n  }\n\n  private _updateLatestValue(async: any, value: Object) {\n      if (async === this._obj) {\n          this._latestValue = value;\n          this._ref.markForCheck();\n      }\n  }\n}\n\n  // transform(value: any, args?: any): any {\n  //   return null;\n  // }\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject, BehaviorSubject, pipe, of } from 'rxjs';\nimport { tap, map, shareReplay } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AES } from 'crypto-ts';\n\nimport { AppConfig } from '../app.config';\nimport { Album, Photo } from '../_classes/photo-classes';\nimport { User } from '../_classes/user-classes';\nimport { LoginResponse } from '../_classes/server-response-classes';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n//  private _authenticated: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  user: User;\n\n  constructor(private http: HttpClient,\n              public   CFG: AppConfig) {\n  // set up default starting values\n//  this.user = new User;\n    if (!this.user && this.isAuthenticated()) {// user must have refreshed, so reset user\n      this.user = new User;\n      this.user.username = this.lastLoggedInUsername();\n      this.user.level = this.lastLoggedInUserLevel();\n    }\n  }\n\n  public isAuthenticated(): boolean {\n//    return this._authenticated.value;\n    return !this.isLoginExpired();\n  }\n\n/*\n  public setAuthenticated (value: boolean) {\n//    this._authenticated.next(value);\n    this._authenticated = value;\n  }\n*/\n\n  public authLogin(): Observable<LoginResponse> {\n    // before transmitting user object to server for authentication, encrypt pw\n    this.user.password = this.encryptPass(this.user.password);\n    return <Observable<LoginResponse>>this.http.post('/api/users/login', this.user).pipe(\n      tap((res : LoginResponse) => {\n        this.storeLoginResponse(res);\n        this.user.level = res.level;\n      }),\n      shareReplay()\n    );\n  }\n\n  public authRegister(): Observable<User> {\n    this.user.password = this.encryptPass(this.user.password);\n    return this.http.post<User>('/api/users/create', this.user).pipe(shareReplay());\n  }\n\n  public authForgot(): Observable<Object> {\n    return this.http.post('/api/users/forgot', this.user).pipe(shareReplay());\n  }\n\n  public authChangePasswordByToken(token: string): Observable<User> {\n    this.user.password = this.encryptPass(this.user.password);\n    let body = this.user;\n    body['token'] = token; // Add token to the object to send to the server\n    return <Observable<User>>this.http.post('/api/users/changepw-by-token', body).pipe(shareReplay());\n  }\n\n  public authChangePasswordByPassword(newPassword: string): Observable<User> {\n    this.user.password = this.encryptPass(this.user.password);\n    let body = this.user;\n    body['newPassword'] = this.encryptPass(newPassword);\n    return <Observable<User>>this.http.post('/api/users/changepw-by-pw', body).pipe(shareReplay());\n  }\n\n  public authUpdateUser(user: User): Observable<User> {\n    if (user.password) user.password = this.encryptPass(user.password);\n    let body = user;\n    return this.http.put<User>('/api/users/update', body);\n  }\n\n  public authGetUsers(): Observable<User[]> {\n    return this.http.get<User[]>('/api/users/list');\n  }\n\n  public getToken(): string {\n    return localStorage.getItem('jwtToken');\n  }\n\n  public isLoginExpired(): boolean {\n    let tokenTimeRemaining = Number(localStorage.getItem('expiresAt')) - Math.round(Date.now()/1000);\n    return (tokenTimeRemaining < 300); // If less than 5 mins (300s) remaining, log in again.\n  }\n\n  public hasLoggedInBefore(): boolean {\n    return (localStorage.getItem('successfulLogin') === 'true');\n  }\n\n  public lastLoggedInUsername(): string {\n    return localStorage.getItem('username');\n  }\n\n  public lastLoggedInUserLevel(): number {\n    return Number(localStorage.getItem('level'));\n  }\n\n  public authLogout() {\n    localStorage.removeItem('username');\n    localStorage.removeItem('jwtToken');\n    localStorage.removeItem('level');\n    localStorage.removeItem('expiresAt');\n    this.user = new User;\n  }\n\n  private encryptPass(password) {\n    return AES.encrypt(password, this.CFG.const.auth.password_secret).toString();\n  }\n\n  private storeLoginResponse(res) {\n    localStorage.setItem('username', this.user.username);\n    localStorage.setItem('jwtToken', res.jwtToken);\n    localStorage.setItem('level', res.level);\n    localStorage.setItem('expiresAt', res.expiresAt);\n    localStorage.setItem('successfulLogin', 'true');\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { flatMap, switchMap, tap } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Album, Photo } from '../_classes/photo-classes';\nimport { UrlSegment } from '../../../node_modules/@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MediaService {\n\n  public curPhotoAlbum: Album; // used to keep track of current album between components\n\n  constructor(private http: HttpClient) {};\n\n  public getPhotoById(id: number): Observable<Photo> {\n    return <Observable<Photo>>this.http.get('/api/photos/photo-by-id/' + id);\n  };\n\n  public getPhotosByIdArray(photos: Array<number>): Observable<Photo[]> {\n    return <Observable<Photo[]>>this.http.get('/api/photos/photos/(' + photos.join('+') + ')');\n  };\n\n  public getThumbsByIdArray(thumbs: Array<number>): Observable<string[]> {\n    return <Observable<string[]>>this.http.get('/api/photos/thumbs/(' + thumbs.join('+') + ')');\n  };\n\n  public getPhotoAlbumById(id: number): Observable<Album> {\n    return <Observable<Album>>this.http.get('/api/photos/album-by-id/' + id);\n  };\n\n  public getPhotoAlbumByPath(path: string): Observable<Album> {\n    let pathString = '(' + path.split('/').join('+') + ')';\n    if (pathString == '(albums)') pathString = '()'; // 'albums' is our root path.\n    return <Observable<Album>>this.http.get('/api/photos/album-by-path/' + pathString);\n  };\n\n  public getPhotoAlbumsByIdArray(albums: Array<number>): Observable<Album[]> {\n    let albumString = '(' + albums.join('+') + ')';\n    return <Observable<Album[]>>this.http.get('/api/photos/albums/' + albumString);\n  };\n\n  public getPhotoAlbumByURL(url: Observable<UrlSegment[]>): Observable<Album> {\n  // This function takes in an UrlSegment array, joins those segments into a path,\n  // passes that path to getAlbumsByPath.  When that resolves it saves the resulting\n  // album into curPhotoAlbum variable (class scope).  Ultimately this function \n  // returns an observable which resolves to the album from getPhotoAlbumByPath.\n    return url.pipe(\n      switchMap(segments => this.getPhotoAlbumByPath(segments.join('/'))),\n      tap(album => this.curPhotoAlbum = album)\n    );\n  };\n\n  public getPhotoAlbumsByURL(url: Observable<UrlSegment[]>): Observable<Album[]> {\n  // This function effectively collapses three observables into one: It first takes \n  // in an observable of an UrlSegment array. When that resolves, it joins those \n  // segments into a path, and passes that path to getPhotoAlbumsByPath (the second \n  // observable). Once that observable resolves into an album, it then saves the result\n  // into the curPhotoAlbum variable (class scope) and finally calls getPhotoAlbums \n  // (the third observable) with that album's album.albums array.  This entire method\n  // ultimately returns an observable that resolves to the resulting array of album \n  // objects from getPhotoAlbumsByIdArray.  \n  // Whew - that's a lot for just a few lines of code!  :)\n    return url.pipe(\n      switchMap(segments => this.getPhotoAlbumByPath(segments.join('/'))),\n      tap(album => this.curPhotoAlbum = album),\n      switchMap(album => this.getPhotoAlbumsByIdArray(album.albums))\n    );\n  };\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, Subscriber } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UrlHelperService {\n\n  constructor(private http: HttpClient) { }\n\n  get(url: string): Observable<any> {\n    return new Observable((observer: Subscriber<any>) => {\n      let objectUrl: string = null;\n\n      this.http.get(url, {responseType: 'blob'})\n        .subscribe(m => {\n            objectUrl = URL.createObjectURL(m);\n            observer.next(objectUrl);\n        });\n\n      return () => {\n        if (objectUrl) {\n            URL.revokeObjectURL(objectUrl);\n            objectUrl = null;\n        }\n      };\n    });\n  }\n}\n","module.exports = \"<p>\\n  about works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"alert-message-container\\\" fxLayoutAlign=\\\"center center\\\">\\n  <div fxLayout=\\\"column\\\">\\n    <mat-toolbar class=\\\"toolbar\\\" align=\\\"center\\\">\\n      <h3 >Note</h3>\\n    </mat-toolbar>\\n    <div mat-dialog-content>\\n      <p>{{data.alertMessage}}</p>\\n    </div>\\n    <div mat-dialog-actions>\\n      <!-- <button mat-raised-button color=\\\"secondary\\\" mat-dialog-close>Cancel</button> -->\\n      <span class=\\\"fill-space\\\"></span>\\n      <button mat-raised-button type=\\\"submit\\\" (click)=\\\"onOkClick()\\\" color=\\\"primary\\\" cdkFocusInitial>Ok</button>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".alert-message-container {\\n  background-color: white;\\n  border-radius: 5px;\\n  border: 1px;\\n  border-color: black;\\n  border-style: ridge;\\n  padding: 10px 10px 22px 10px; }\\n\\nh3 {\\n  font-size: 25px;\\n  flex: 1 1 auto; }\\n\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nexport interface DialogData {\n  alertMessage: string;\n}\n\n@Component({\n  selector: 'app-alert-message-dialog',\n  templateUrl: './alert-message-dialog.component.html',\n  styleUrls: ['./alert-message-dialog.component.scss']\n})\nexport class AlertMessageDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<AlertMessageDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  ngOnInit() {\n  }\n\n  onOkClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { ManageUsersComponent } from './manage-users/manage-users.component';\nimport { GalleryComponent } from './gallery/gallery.component';\nimport { GalleryVideoAlbumsComponent } from './gallery-video-albums/gallery-video-albums.component';\nimport { GalleryPhotoAlbumsComponent } from './gallery-photo-albums/gallery-photo-albums.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { AboutComponent } from './about/about.component';\nimport { DownloadsComponent } from './downloads/downloads.component';\nimport { GalleryPhotoPhotosComponent } from './gallery-photo-photos/gallery-photo-photos.component';\n\nconst appRoutes: Routes = [\n    { path: 'gallery', component: GalleryComponent },\n    { path: 'videos', component: GalleryVideoAlbumsComponent },\n    { path: 'albums', component: GalleryPhotoAlbumsComponent }, \n    { path: 'albums', children: [\n        { path: '**', component: GalleryPhotoAlbumsComponent}\n    ]},\n    { path: 'photos', children: [\n        { path: '**', component: GalleryPhotoPhotosComponent}\n    ]},\n    { path: 'downloads', component: DownloadsComponent },\n    { path: 'changepass/:username/:token', component: ChangePasswordComponent },\n    { path: 'changepass', component: ChangePasswordComponent },\n    { path: 'manage', component: ManageUsersComponent },\n    { path: 'about', component: AboutComponent },\n    { path: 'login', component: LoginComponent },\n    { path: '', redirectTo: 'login', pathMatch: 'full' },\n    { path: '**', component: PageNotFoundComponent }\n  ];\n\n  @NgModule({\n    imports: [\n        RouterModule.forRoot(\n            appRoutes\n        )\n    ],\n    exports: [\n        RouterModule\n    ]\n  })\n  export class AppRoutingModule {}","module.exports = \"<!-- <app-login></app-login> -->\\n<app-header></app-header>\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'McGrandle.com';\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../environments/environment';\nimport { IAppConfig } from './app.config.model';\n\n@Injectable()\nexport class AppConfig {\n\n    public const :IAppConfig;\n\n    constructor(private http: HttpClient) {}\n\n    load() {\n        const jsonFile = `assets/config/config.${environment.confName}.json`;\n        return new Promise<void>((resolve, reject) => { \n            this.http.get(jsonFile).subscribe(\n                (res) => {\n                    this.const = <IAppConfig>res;\n                    resolve();\n                },\n                (err) => reject('Could not load file ' + jsonFile + ': ' + JSON.stringify(err))\n            )\n        });\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { OverlayModule, OverlayContainer, FullscreenOverlayContainer } from '@angular/cdk/overlay';\n//import { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n//for configuration file read during initialization:\nimport { APP_INITIALIZER } from '@angular/core';\n\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { MatButtonModule, MatCheckboxModule, MatDatepickerModule, MatFormFieldModule,\n  MatInputModule, MatRadioModule, MatSelectModule, MatSliderModule, MatPaginatorModule,\n  MatSlideToggleModule, MatToolbarModule, MatListModule, MatGridListModule,\n  MatCardModule, MatIconModule, MatProgressSpinnerModule, MatDialogModule, MatMenuModule, MatTableModule } from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport 'hammerjs';\n\nimport { AppConfig } from './app.config';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { LoginComponent } from './login/login.component';\nimport { ManageUsersComponent } from './manage-users/manage-users.component';\nimport { EditUserDialogComponent } from './edit-user-dialog/edit-user-dialog.component';\nimport { AlertMessageDialogComponent } from './alert-message-dialog/alert-message-dialog.component';\nimport { RegisterComponent } from './register/register.component';\nimport { EqualDirective } from './_helpers/equal-validator';\nimport { ForgotDialogComponent } from './forgot-dialog/forgot-dialog.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { GalleryComponent } from './gallery/gallery.component';\nimport { GalleryVideoAlbumsComponent } from './gallery-video-albums/gallery-video-albums.component';\nimport { GalleryPhotoAlbumsComponent } from './gallery-photo-albums/gallery-photo-albums.component';\nimport { GalleryPhotoPhotosComponent } from './gallery-photo-photos/gallery-photo-photos.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { AboutComponent } from './about/about.component';\nimport { DownloadsComponent } from './downloads/downloads.component';\n\nimport { MediaService } from './_services/media.service';\nimport { AuthService } from './_services/auth.service';\nimport { UrlHelperService } from './_services/url-helper.service';\n\nimport { JwtInterceptor } from './_helpers/jwt-interceptor';\nimport { SecurePipe } from './_helpers/secure.pipe';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    LoginComponent,\n    AlertMessageDialogComponent,\n    RegisterComponent,\n    EqualDirective,\n    ForgotDialogComponent,\n    ChangePasswordComponent,\n    GalleryComponent,\n    GalleryVideoAlbumsComponent,\n    GalleryPhotoAlbumsComponent,\n    GalleryPhotoPhotosComponent,\n    PageNotFoundComponent,\n    AboutComponent,\n    DownloadsComponent,\n    SecurePipe,\n    ManageUsersComponent,\n    EditUserDialogComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    MatButtonModule, MatCheckboxModule, MatDatepickerModule, MatFormFieldModule,\n    MatInputModule, MatRadioModule, MatSelectModule, MatSliderModule, MatTableModule, \n    MatSlideToggleModule, MatToolbarModule, MatListModule, MatGridListModule,\n    MatCardModule, MatIconModule, MatProgressSpinnerModule, MatDialogModule,\n    FlexLayoutModule, MatMenuModule, MatPaginatorModule, MatProgressSpinnerModule\n  ],\n  providers: [\n    AppConfig, {\n      provide: APP_INITIALIZER,\n      useFactory: loadConfigDuringInit,\n      deps: [AppConfig],\n      multi: true\n    },\n    {\n      provide: OverlayContainer, \n      useClass: FullscreenOverlayContainer\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptor,\n      multi: true\n    }\n  ],\n  entryComponents: [\n    RegisterComponent, ForgotDialogComponent, AlertMessageDialogComponent, EditUserDialogComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\nexport function loadConfigDuringInit(appConfig: AppConfig) {\n  return () => appConfig.load();\n}\n","module.exports = \"<!-- <div class=\\\"change-password-container\\\"> -->\\n  <!-- <video autoplay muted loop id=\\\"BackImage\\\">\\n    <source src=\\\"assets/video/Piano480p.mp4\\\" type=\\\"video/mp4\\\">\\n  </video> -->\\n  <img src=\\\"assets/images/Mountain.jpg\\\" id=\\\"BackImage\\\" fxFlexFill>\\n  <div class=\\\"change-password-container\\\" fxLayoutAlign=\\\"center center\\\">\\n        <!-- fxLayout=\\\"row\\\"\\n        fxLayout.sm=\\\"column\\\"\\n        fxLayout.xs=\\\"column\\\" -->\\n      <form novalidate #changePasswordForm=\\\"ngForm\\\" class=\\\"change-password-form\\\" fxLayout=\\\"column\\\">\\n        <mat-toolbar class=\\\"toolbar\\\">\\n          <h3 align=\\\"center\\\">Change your password</h3>\\n        </mat-toolbar>\\n        <p>Changing password for user: {{ auth.user.username }}</p>\\n        <mat-form-field *ngIf=\\\"knowExisting\\\"> <!-- Only add this to DOM if NOT sent here via forgotten password email -->\\n          <input matInput maxlength=\\\"30\\\" placeholder=\\\"Existing password\\\" [type]=\\\"hideExgPass ? 'password' : 'text'\\\" [(ngModel)]=\\\"existingPass\\\" #exgpass=\\\"ngModel\\\" name=\\\"exgpass\\\" required>\\n          <!-- <mat-hint align=\\\"end\\\">{{input.value?.length || 0}}/20</mat-hint> -->\\n          <mat-icon matSuffix (click)=\\\"hideExgPass = !hideExgPass\\\">{{hideExgPass ? 'visibility' : 'visibility_off'}}</mat-icon>\\n          <mat-hint>\\n            <span [hidden]=\\\"exgpass.pristine\\\">\\n              <span [hidden]=\\\"!exgpass.errors?.required\\\">** Existing Password is required **</span>\\n            </span>\\n          </mat-hint>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput maxlength=\\\"30\\\" placeholder=\\\"New password\\\" [type]=\\\"hideNewPass ? 'password' : 'text'\\\" ngModel #newpass=\\\"ngModel\\\" name=\\\"newpass\\\" required>\\n          <!-- <mat-hint align=\\\"end\\\">{{input.value?.length || 0}}/20</mat-hint> -->\\n          <mat-icon matSuffix (click)=\\\"hideNewPass = !hideNewPass\\\">{{hideNewPass ? 'visibility' : 'visibility_off'}}</mat-icon>\\n          <mat-hint>\\n            <span [hidden]=\\\"newpass.pristine\\\">\\n              <span [hidden]=\\\"!newpass.errors?.required\\\">** New password is required **</span>\\n            </span>\\n          </mat-hint>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput maxlength=\\\"30\\\" placeholder=\\\"Re-Enter your new password\\\" [type]=\\\"hideNewPassChk ? 'password' : 'text'\\\" ngModel name=\\\"newpasschk\\\" #newpasschk=\\\"ngModel\\\" required>\\n          <mat-icon matSuffix (click)=\\\"hideNewPassChk = !hideNewPassChk\\\">{{hideNewPassChk ? 'visibility' : 'visibility_off'}}</mat-icon>\\n          <mat-hint>\\n            <span [hidden]=\\\"newpasschk.pristine\\\">\\n              <span [hidden]=\\\"newpass.value === newpasschk.value\\\">** Passwords are not the same **</span>\\n            </span>\\n          </mat-hint>\\n        </mat-form-field>\\n        <div fxLayout=\\\"row\\\">\\n          <span class=\\\"fill-space\\\"></span>\\n          <button mat-raised-button type=\\\"submit\\\"\\n             color=\\\"primary\\\" [disabled]=\\\"newpass.value !== newpasschk.value\\\" (click)=\\\"onChangePassword(newpass.value)\\\">Change Password</button>\\n        </div>\\n      </form>\\n  </div>\\n\\n<!-- </div> -->\\n\"","module.exports = \"#BackImage {\\n  position: fixed;\\n  right: 0;\\n  bottom: 0;\\n  min-width: 100%;\\n  min-height: 100%;\\n  -webkit-filter: opacity(60%);\\n          filter: opacity(60%);\\n  z-index: -1;\\n  background-position: right;\\n  background-size: cover; }\\n\\n.change-password-container {\\n  min-height: 100vh; }\\n\\n.change-password-form {\\n  min-width: 300px;\\n  background-color: white;\\n  border-radius: 5px;\\n  border: 1px;\\n  border-color: black;\\n  border-style: ridge;\\n  padding: 10px; }\\n\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nimport { User } from '../_classes/user-classes';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertMessageDialogComponent } from '../alert-message-dialog/alert-message-dialog.component';\n\nexport interface DialogData {\n  alertMessage: string;\n}\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss']\n})\nexport class ChangePasswordComponent implements OnInit {\n\n  hideExgPass: boolean = true; // hide existing password as dots instead of plain text\n  hideNewPass: boolean = true;\n  hideNewPassChk: boolean = true;\n  knowExisting: boolean = false;\n  existingPass : string;\n\n  token: string;\n\n  constructor(private auth: AuthService,\n              private route: ActivatedRoute,\n              private router: Router,\n              public dialog: MatDialog) { }\n\n  ngOnInit() {\n    // This component can be called two ways:\n    // 1. User clicks on link in forgot-password email sent.  Use the token\n    // sent to validate the password change on the server.\n    // 2. User clicks Change Password link in HeaderComponent navbar.  Use\n    // current password to validate the password change on the server.\n//  this.auth.user = new User;  // first clear out any old user info\n    this.token = this.route.snapshot.paramMap.get('token');\n    if (this.token) {// method 1\n      this.knowExisting = false;\n      this.auth.user.username = this.route.snapshot.paramMap.get('username');\n    } else { // method 2\n      if (!this.auth.isAuthenticated()) { this.router.navigate(['/login']) }\n      this.knowExisting = true;\n    }\n\n  }\n\n  onChangePassword(newpass: string) {\n    if (this.knowExisting) {\n      this.auth.user.password = this.existingPass;\n      this.auth.authChangePasswordByPassword(newpass).subscribe( \n        (result: User) => this.successfulChange(result),\n        (err) => this.errorChange(err)\n      );\n    } else {\n      this.auth.user.password = newpass;\n      this.auth.authChangePasswordByToken(this.token).subscribe(\n        (result: User) => this.successfulChange(result),\n        (err) => this.errorChange(err)\n      );\n    }\n  }\n\n  successfulChange(user: User) {\n    const dialogRef = this.dialog.open(AlertMessageDialogComponent, {\n      data: {alertMessage: 'Password changed for \"' + user.username + '\"'}\n    });\n    dialogRef.afterClosed().subscribe(() => this.router.navigate(['/login']));\n    console.log(\"Password changed for user: \" + user.username);\n  }\n\n  errorChange(err) {\n    console.log(err);\n    const dialogRef = this.dialog.open(AlertMessageDialogComponent, {\n      data: {alertMessage: err.error}\n    });\n    dialogRef.afterClosed().subscribe(() => this.router.navigate(['/login']));\n  }\n}\n\n/* Note: this form is simple to validate without using the built in angular\n   form validity system because there are only two values on the entire form.\n   See the RegisterComponent for the complicated method. :) */\n","module.exports = \"<p>\\n  downloads not yet implemented!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-downloads',\n  templateUrl: './downloads.component.html',\n  styleUrls: ['./downloads.component.scss']\n})\nexport class DownloadsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"  <div class=\\\"edit-user-container\\\">\\n      <!-- fxLayout=\\\"row\\\"\\n      fxLayout.sm=\\\"column\\\"\\n      fxLayout.xs=\\\"column\\\" -->\\n    <form #userForm=\\\"ngForm\\\" class=\\\"user-form\\\" fxLayout=\\\"column\\\" (ngSubmit)=\\\"onSaveClick(password.value)\\\">\\n      <mat-toolbar class=\\\"toolbar\\\" align=\\\"center\\\">\\n        <h3>Edit User</h3>\\n      </mat-toolbar>\\n      <p>Id: {{data.user._id}}</p>\\n      <mat-form-field>\\n        <input matInput minlength=\\\"5\\\" maxlength=\\\"30\\\" placeholder=\\\"Full Name\\\" type=\\\"text\\\" [(ngModel)]=\\\"data.user.name\\\" #name=\\\"ngModel\\\" name=\\\"name\\\">\\n        <!-- <mat-hint align=\\\"end\\\">{{input.value?.length || 0}}/20</mat-hint> -->\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput minlength=\\\"5\\\" maxlength=\\\"20\\\" placeholder=\\\"Username\\\" type=\\\"text\\\" [(ngModel)]=\\\"data.user.username\\\" #username=\\\"ngModel\\\" name=\\\"username\\\">\\n        <!-- <mat-hint align=\\\"end\\\">{{input.value?.length || 0}}/20</mat-hint> -->\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput minlength=\\\"5\\\" maxlength=\\\"40\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" [(ngModel)]=\\\"data.user.email\\\" #email=\\\"ngModel\\\" name=\\\"email\\\">\\n        <!-- <mat-hint align=\\\"end\\\">{{input.value?.length || 0}}/20</mat-hint> -->\\n        <mat-hint>\\n          <span [hidden]=\\\"email.pristine\\\">\\n            <span [hidden]=\\\"!email.errors?.minlength\\\">** Minimum length is 5 characters **</span>\\n          </span>\\n        </mat-hint>\\n      </mat-form-field>\\n      <mat-form-field>\\n          <mat-select [(ngModel)]=\\\"tempLevel\\\" placeholder=\\\"Level\\\" #level=\\\"ngModel\\\" name=\\\"level\\\">\\n          <mat-option value=\\\"0\\\">0 - Delete This User</mat-option>\\n          <mat-option value=\\\"1\\\">1 - Not Activated</mat-option>\\n          <mat-option value=\\\"2\\\">2 - Normal User Level</mat-option>\\n          <mat-option value=\\\"3\\\">3 - Uploader</mat-option>\\n          <mat-option value=\\\"4\\\">4 - Site Admin</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <fieldset fxLayout=\\\"column\\\" class=\\\"password-group\\\" ngModelGroup=\\\"passGroup\\\" equal>\\n        <legend>Change User's Password</legend>\\n        <mat-form-field>\\n          <input matInput minlength=\\\"5\\\" maxlength=\\\"30\\\" placeholder=\\\"New password\\\" [type]=\\\"hidePass ? 'password' : 'text'\\\"\\n              ngModel name=\\\"password\\\" #password=\\\"ngModel\\\">\\n          <mat-icon matSuffix (click)=\\\"hidePass = !hidePass\\\">{{hidePass ? 'visibility' : 'visibility_off'}}</mat-icon>\\n          <mat-hint>\\n            <span [hidden]=\\\"password.pristine\\\">\\n              <span [hidden]=\\\"!password.errors?.minlength\\\">** Minimum length is 5 characters **</span>\\n            </span>\\n          </mat-hint>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput minlength=\\\"5\\\" maxlength=\\\"30\\\" placeholder=\\\"Verify the new password\\\" [type]=\\\"hideRetype ? 'password' : 'text'\\\"\\n              ngModel name=\\\"retype\\\" #retype=\\\"ngModel\\\" [required]=\\\"password.value ? true : false\\\">\\n          <mat-icon matSuffix (click)=\\\"hideRetype = !hideRetype\\\">{{hideRetype ? 'visibility' : 'visibility_off'}}</mat-icon>\\n          <mat-hint>\\n            <span [hidden]=\\\"password.pristine\\\">\\n                <span [hidden]=\\\"!retype.errors?.required\\\">** Verification of the password is required **</span>\\n            </span>\\n            <span [hidden]=\\\"retype.pristine\\\">\\n              <span [hidden]=\\\"!retype.errors?.minlength\\\">** Minimum length 5 ** </span>\\n              <span [hidden]=\\\"!userForm.form.hasError('equal', 'passGroup')\\\">** Passwords don't match **</span>\\n            </span>\\n          </mat-hint>\\n        </mat-form-field>\\n      </fieldset>\\n      <div fxLayout=\\\"row\\\">\\n        <button mat-button mat-dialog-close>Cancel</button>\\n        <span class=\\\"fill-space\\\"></span>\\n        <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\" [disabled]=\\\"userForm.form.invalid || userForm.form.pristine\\\" cdkFocusInitial>Save</button>\\n        <!-- <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\" cdkFocusInitial>Save</button> -->\\n      </div>\\n    </form>\\n</div>\\n\"","module.exports = \".mat-dialog-container {\\n  padding: 3px; }\\n\\n.edit-user-container {\\n  background-color: white;\\n  border-radius: 5px;\\n  border: 1px;\\n  border-color: black;\\n  border-style: ridge;\\n  padding: 10px 10px 22px 10px; }\\n\\nh3 {\\n  font-size: 25px;\\n  flex: 1 1 auto; }\\n\\n.password-group {\\n  margin: 0 5px 20px 5px;\\n  border: 1px solid #660000;\\n  border-radius: 2px;\\n  padding: 10px; }\\n\"","import { Component, Inject, OnInit, Directive, ViewEncapsulation } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material';\nimport { NG_VALIDATORS, Validator, FormGroup, ValidatorFn, NgForm } from '@angular/forms';\n\nimport { User } from '../_classes/user-classes';\nimport { EqualDirective } from '../_helpers/equal-validator';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertMessageDialogComponent } from '../alert-message-dialog/alert-message-dialog.component';\n\nexport interface DialogData {\n  user: User;\n}\n\n@Component({\n  selector: 'app-edit-user-dialog',\n  templateUrl: './edit-user-dialog.component.html',\n  styleUrls: ['./edit-user-dialog.component.scss'],\n  encapsulation: ViewEncapsulation.None // Had to turn off to CSS style fieldset ... ?\n})\nexport class EditUserDialogComponent implements OnInit {\n\n  hidePass: boolean;\n  hideRetype: boolean;\n  tempLevel: string;\n  saveUser: User;\n\n  constructor(public dialogRef: MatDialogRef<EditUserDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public   data: DialogData, \n                             public   auth: AuthService,\n                             public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.hidePass = this.hideRetype = true;\n    this.tempLevel = this.data.user.level.toString();\n    this.saveUser = JSON.parse(JSON.stringify(this.data.user)); // save initial state\n  }\n\n  onSaveClick(password: string): void {\n    if (password) this.data.user.password = password;\n    if (Number(this.tempLevel) !== this.data.user.level) {\n      this.data.user.level = Number(this.tempLevel);\n    }\n    this.auth.authUpdateUser(this.data.user).subscribe(\n      (userReturned) => {\n        const alertMessage = 'User \"' + userReturned.name + '\" has been successfully updated.' ;\n        const dialogRef = this.dialog.open(AlertMessageDialogComponent, {\n          width: '350px',\n          data: {alertMessage: alertMessage}\n        });\n        dialogRef.afterClosed().subscribe(() => this.dialogRef.close());\n      },\n      (err)=> {\n        const alertMessage = 'Error: ' + err.error;\n        const dialogRef = this.dialog.open(AlertMessageDialogComponent, {\n          data: {alertMessage: alertMessage} });\n        dialogRef.afterClosed().subscribe(() => {\n          this.copyToDialogData(this.saveUser); // Restore initial state due to error\n          this.dialogRef.close();\n        });\n      }\n    );\n  }\n\n  copyToDialogData(user: User) {\n    // restores the DialogData to what it was before modifications due to error\n    this.data.user._id = user._id;\n    this.data.user.name =  user.name;\n    this.data.user.username = user.username;\n    delete this.data.user.password;\n    this.data.user.email =  user.email;\n    this.data.user.level =  user.level;\n  }\n\n}\n","module.exports = \"<div *ngIf=\\\"auth.isAuthenticated()\\\">\\n  <mat-toolbar class=\\\"toolbar\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"0px\\\" fxLayoutAlign=\\\"center center\\\">\\n      <h2>{{CFG.const.footer.title}}</h2>\\n      <p>Contact <a href=\\\"mailto:{{CFG.const.footer.email}}\\\">{{CFG.const.footer.email}}</a> with any issues.</p>\\n  </mat-toolbar>\\n</div>\\n\"","module.exports = \"p {\\n  font-size: 12px;\\n  margin: -5px 0 0 0; }\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from '../_services/auth.service';\nimport { AppConfig } from '../app.config';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor(private auth: AuthService,\n              public CFG: AppConfig) { }\n\n  ngOnInit() {\n   }\n\n}\n","module.exports = \"<div class=\\\"register-container\\\" fxLayoutAlign=\\\"center center\\\">\\n      <!-- fxLayout=\\\"row\\\"\\n      fxLayout.sm=\\\"column\\\"\\n      fxLayout.xs=\\\"column\\\" -->\\n    <form novalidate #forgotDialogForm=\\\"ngForm\\\" class=\\\"forgot-dialog-form\\\" fxLayout=\\\"column\\\" (ngSubmit)=\\\"onSubmitClick()\\\">\\n      <mat-toolbar class=\\\"toolbar\\\">\\n        <h3 align=\\\"center\\\">Forgot username/password</h3>\\n      </mat-toolbar>\\n        <p>Whether you forgot your username OR your password, simply input your email address\\n           below and an email will be sent to you with your username and a link to reset\\n           your password.</p>\\n      <mat-form-field>\\n        <input matInput maxlength=\\\"40\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" [(ngModel)]=\\\"auth.user.email\\\" #email=\\\"ngModel\\\" name=\\\"email\\\" required>\\n        <!-- <mat-hint align=\\\"end\\\">{{input.value?.length || 0}}/20</mat-hint> -->\\n        <mat-hint>\\n          <span [hidden]=\\\"email.pristine\\\">\\n            <span [hidden]=\\\"!email.errors?.required\\\">** email is required **</span>\\n          </span>\\n        </mat-hint>\\n      </mat-form-field>\\n      <div fxLayout=\\\"row\\\">\\n        <button mat-button mat-dialog-close>Cancel</button>\\n        <span class=\\\"fill-space\\\"></span>\\n        <button mat-raised-button routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\" type=\\\"submit\\\" color=\\\"primary\\\" [disabled]=\\\"forgotDialogForm.form.invalid\\\">Submit</button>\\n      </div>\\n    </form>\\n</div>\\n\"","module.exports = \".forgot-dialog-form {\\n  min-width: 250px;\\n  max-width: 500px;\\n  background-color: white;\\n  border-radius: 5px;\\n  border: 1px;\\n  border-color: black;\\n  border-style: ridge;\\n  padding: 10px;\\n  padding-bottom: 20px; }\\n\\nh3 {\\n  font-size: 4.3vw; }\\n\\n@media screen and (min-width: 680px) {\\n    h3 {\\n      font-size: 30px; } }\\n\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\n\nimport { AuthService } from '../_services/auth.service';\nimport { AlertMessageDialogComponent } from '../alert-message-dialog/alert-message-dialog.component';\n\nexport interface DialogData {\n  username: string;\n}\n\n@Component({\n  selector: 'app-forgot-dialog',\n  templateUrl: './forgot-dialog.component.html',\n  styleUrls: ['./forgot-dialog.component.scss']\n})\nexport class ForgotDialogComponent implements OnInit {\n\n  token : string;\n  error: boolean = false;\n\n  constructor(\n    private auth: AuthService,\n    public dialogRef: MatDialogRef<ForgotDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private activatedRoute: ActivatedRoute,\n    public dialog: MatDialog) {\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmitClick() {\n    this.auth.authForgot().subscribe(\n      (userReturned) => {\n        const alertMessage = 'Email \"' + userReturned['email'] + '\" was sent reset email. ' +\n          \"If you don't see it in a few minutes please check your SPAM folder.\" ;\n        const dialogRef = this.dialog.open(AlertMessageDialogComponent, {\n          width: '400px',\n          data: {alertMessage: alertMessage}\n        });\n        dialogRef.afterClosed().subscribe(result => {});\n      },\n      (err)=> {\n        const alertMessage = 'Email \"' + this.auth.user['email'] + '\" was not found!';\n        const dialogRef = this.dialog.open(AlertMessageDialogComponent, {\n          data: {alertMessage: alertMessage}\n        });\n        dialogRef.afterClosed().subscribe(result => {});\n      },\n      () => {}\n    );\n    this.dialogRef.close();\n  }\n\n\n}\n","module.exports = \"<div *ngIf=\\\"displayAlbums\\\">\\n  <h2>{{media.curPhotoAlbum.name}}:</h2>\\n  <div class=\\\"container\\\"\\n    fxLayout=\\\"row wrap\\\"\\n    fxLayoutGap=\\\"4px\\\"\\n    fxLayoutAlign.gt-xs=\\\"space-evenly stretch\\\">\\n    <mat-card *ngFor=\\\"let album of displayAlbums\\\" (click)=\\\"updateDisplayAlbumOrNavToPhotos(album)\\\"\\n      fxFlex.xl=\\\"16.2%\\\" fxFlex.lg=\\\"24.5%\\\" fxFlex.md=\\\"32.5%\\\" fxFlex.sm=\\\"49%\\\" fxFlex.xs=\\\"98%\\\">\\n      <mat-card-header>\\n        <mat-card-title>\\n          <h3 fxFlexAlign>{{album.name}}</h3>\\n        </mat-card-title>\\n        <mat-card-subtitle>{{album.description}}</mat-card-subtitle>\\n      </mat-card-header>\\n      <div *ngIf='album.featuredPhoto.filename' fxFill fxLayout=\\\"center center\\\">\\n        <img mat-card-image [src]='(album.featuredPhoto.fullPath) | secure'>\\n      </div>\\n      <mat-card-footer>  \\n      </mat-card-footer>\\n    </mat-card>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"!displayAlbums\\\">\\n  <p>Waiting on server ...</p>\\n</div>\\n\\n\"","module.exports = \".mat-card {\\n  border-radius: 5px;\\n  border: 1px;\\n  border-color: black;\\n  border-style: ridge;\\n  padding: 10px 10px 30px 10px;\\n  margin-bottom: 5px;\\n  cursor: pointer; }\\n\\n[mat-card-image] {\\n  margin: 0 0 30px 0;\\n  width: 100%;\\n  -ms-grid-row-align: center;\\n      align-self: center;\\n  border-radius: 5px; }\\n\"","import { Component, OnInit, HostListener } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { MediaService } from '../_services/media.service';\nimport { AlertMessageDialogComponent } from '../alert-message-dialog/alert-message-dialog.component';\nimport { Album, Photo } from '../_classes/photo-classes';\n\n@Component({\n  selector: 'app-gallery-photo-albums',\n  templateUrl: './gallery-photo-albums.component.html',\n  styleUrls: ['./gallery-photo-albums.component.scss']\n})\nexport class GalleryPhotoAlbumsComponent implements OnInit {\n\n  displayAlbums : Array<Album>;\n\n  constructor(private    media: MediaService,\n              private    route: ActivatedRoute,\n              private   router: Router, \n              public    dialog: MatDialog,\n              private location: Location) { }\n\n  ngOnInit() {\n    // this observable changes on init, or when nav button hit (back or fwd)\n    this.media.getPhotoAlbumsByURL(this.route.url).subscribe(\n      (albums) => this.displayAlbums = albums,\n      (err) => this.errAlert('Problem getting albums!', err)\n    );\n  };\n\n  public updateDisplayAlbumOrNavToPhotos(album: Album) {\n    this.media.curPhotoAlbum = album; // go down one level (directory).\n    if (album.albums.length > 0) {// means this album contains other albums\n      this.media.getPhotoAlbumsByIdArray(album.albums).subscribe( \n        (albums) => { // get the albums array for this new album\n          this.displayAlbums = albums; // set albums to display\n          const url = 'albums' + this.router.createUrlTree([album.path]).toString();\n          this.location.go(url); // Update the URL in the browser window without navigating.\n        },\n        (err) => this.errAlert('Problem getting albums!', err)\n      );\n    } else { // Not an album of albums!  So nav to photos ...\n      this.router.navigate(['/photos/' + album.path]); \n    } \n  };\n\n  private errAlert(msg: string, err) {\n    const alertMessage = msg + err.error;\n    const dialogRef = this.dialog.open(AlertMessageDialogComponent, {\n      width: '400px',\n      data: {alertMessage: alertMessage}\n    });\n    dialogRef.afterClosed().subscribe(result => {});\n    console.log(err);\n    this.router.navigate(['/gallery']);\n  };\n\n}\n","module.exports = \"<div id=\\\"full-screen\\\" *ngIf=\\\"curPhoto && curThumbs\\\">\\n  <div class=\\\"title\\\" fxLayout=\\\"row\\\">\\n    <h2><span>{{media.curPhotoAlbum.name}}:</span></h2>\\n    <span class=\\\"fill-space\\\"></span>\\n    <a [download]='curPhoto.filename' [href]='curPhoto.fullPath | secure'>\\n      <mat-icon>vertical_align_bottom</mat-icon>\\n    </a>\\n  </div>\\n  <div class=\\\"container\\\"\\n    fxLayout=\\\"column\\\"\\n    fxLayoutGap=\\\"4px\\\"\\n    fxLayoutAlign.gt-xs=\\\"space-evenly stretch\\\">\\n    <!-- large display picture -->\\n    <div fxHide.lt-sm fxLayout=\\\"column\\\" fxLayoutAlign=\\\"none center\\\">\\n      <mat-card (click)=\\\"makeFullscreen()\\\" >\\n        <img class=\\\"img-large\\\" mat-card-image [src]='curPhoto.fullPath | secure'>\\n      </mat-card>\\n    </div>\\n    <!-- scrollable row of thumbnails -->\\n    <div id=\\\"thumbnails\\\" fxLayout.gt-xs=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayoutGap.gt-xs=\\\"6px\\\" fxLayoutGap.xs=\\\"1px\\\" fxLayoutAlign.gt-xs=\\\"none center\\\" fxLayoutAlign.xs=\\\"none none\\\">  \\n      <div *ngFor=\\\"let photoId of media.curPhotoAlbum.photos; index as i\\\" (click)=\\\"changePhoto(photoId)\\\"\\n        fxFlex.xl=\\\"0 0 4.25%\\\" fxFlex.lg=\\\"0 0 6.31%\\\" fxFlex.md=\\\"0 0 7.8%\\\" fxFlex.sm=\\\"0 0 11.75%\\\" fxFlex.xs=\\\"1 1 auto\\\">\\n        <img #thumbnail fxFlexAlignSelf=\\\"center\\\" class=\\\"img-thumbs\\\" [id]=\\\"highlightAndScroll(photoId, thumbnail)\\\" [src]='curThumbs[i] | secure'>\\n      </div>\\n    </div>>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"!(curPhoto && curThumbs)\\\">\\n  <p>Waiting on server ...</p>\\n</div>\\n\"","module.exports = \".mat-card-image {\\n  border-radius: 6px;\\n  border: 3px;\\n  border-color: black;\\n  border-style: ridge; }\\n\\n.img-large {\\n  max-height: 60vh;\\n  width: auto;\\n  max-width: 95vw; }\\n\\n.title {\\n  margin: 0 0 5px 0;\\n  padding-top: 5px;\\n  color: floralwhite; }\\n\\n.title h2 {\\n    margin: 0;\\n    padding: 5px; }\\n\\n.title a {\\n    color: floralwhite; }\\n\\n.title a .mat-icon {\\n      padding: 5px;\\n      margin-right: 5px; }\\n\\n.mat-card {\\n  cursor: pointer;\\n  background-color: black; }\\n\\n#thumbnails {\\n  overflow: scroll; }\\n\\n.img-thumbs {\\n  cursor: pointer;\\n  border-radius: 6px;\\n  border: 3px;\\n  border-color: black;\\n  border-style: ridge;\\n  width: 100%; }\\n\\n#selected {\\n  border-color: white; }\\n\\n#full-screen {\\n  background-color: black;\\n  border-radius: 6px; }\\n\"","import { Component, EventEmitter, Directive, Output, OnInit, HostListener } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { VERSION } from '@angular/material';\n\nimport { MediaService } from '../_services/media.service';\nimport { AlertMessageDialogComponent } from '../alert-message-dialog/alert-message-dialog.component';\nimport { FullscreenOverlayContainer } from '../../../node_modules/@angular/cdk/overlay';\nimport { Photo } from '../_classes/photo-classes';\nimport { Observable, of } from 'rxjs';\nimport { OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY } from '../../../node_modules/@angular/cdk/overlay/typings/keyboard/overlay-keyboard-dispatcher';\n\nEvent\n\nexport enum KEY_CODE {\n  PAGE_UP = 33,\n  PAGE_DOWN = 34,\n  END = 35,\n  HOME = 36,\n  LEFT_ARROW = 37,\n  RIGHT_ARROW = 39\n};\n\n@Component({\n  selector: 'app-gallery-photo-photos',\n  templateUrl: './gallery-photo-photos.component.html',\n  styleUrls: ['./gallery-photo-photos.component.scss']\n})\n\nexport class GalleryPhotoPhotosComponent implements OnInit {\n\n  version = VERSION;\n  curPhoto: Photo;\n  curThumbs: string[];\n//  selectedPhoto: Observable<any>;\n\n  constructor(private  media: MediaService,\n              private  route: ActivatedRoute,\n              private router: Router, \n              public  dialog: MatDialog) { }\n\n  ngOnInit() {\n    // If called from gallery-photo-albums component then the\n    // media.curPhotoAlbum variable will already be set up. If not\n    // we were probably called by a browser typed link or refresh.\n    if (this.media.curPhotoAlbum) {\n      this.setCurrentValues(this.media.curPhotoAlbum.photos);\n    } else {// We need to load the curAlbum from the url sent.\n      this.media.getPhotoAlbumByURL(this.route.url).subscribe(\n        (album) => this.setCurrentValues(album.photos),\n        (err) => this.errAlert('Problem getting albums!', err)\n      );\n    }\n  }\n\n  private setCurrentValues(photos: number[]) {\n    this.media.getPhotoById(photos[0]).subscribe(\n      photo => this.curPhoto = photo\n    );\n    this.media.getThumbsByIdArray(photos).subscribe(\n      thumbs => this.curThumbs = thumbs\n    );\n  }\n\n  private changePhoto(photo: Photo) {\n    this.curPhoto = photo;\n  }\n\n  private highlightAndScroll(photoId: number, e: Element) {\n    if (photoId === this.curPhoto._id) {\n      e.scrollIntoView({behavior: \"instant\", block: \"center\", inline: \"center\"})\n      return \"selected\"; // changes the id property of this element so css styles can outline it\n    }\n    return null;\n  }\n\n  @HostListener('window:keyup', ['$event'])\n  keyEvent(event: KeyboardEvent) {\n    if (event.keyCode in KEY_CODE) {\n      let nextIndex = 0;\n      const curIndex = Number(this.curPhoto._id);\n      switch (event.keyCode) { // set nextIndex to where we are going next\n        case KEY_CODE.RIGHT_ARROW:\n            nextIndex = (curIndex === this.media.curPhotoAlbum.photos.length-1) ? 0: curIndex + 1;\n            break;\n        case KEY_CODE.LEFT_ARROW: \n            nextIndex = (curIndex === 0) ? this.media.curPhotoAlbum.photos.length-1 : curIndex - 1;\n            break;\n        case KEY_CODE.END: \n            nextIndex = this.media.curPhotoAlbum.photos.length-1;\n            break;\n        case KEY_CODE.HOME: \n            nextIndex = 0;\n            break;\n        case KEY_CODE.PAGE_UP: \n//            console.log('Pressed PAGE_UP');\n            break;\n        case KEY_CODE.PAGE_DOWN: \n//            console.log('Pressed PAGE_DOWN');\n            break;\n      }\n      this.media.getPhotoById(nextIndex).subscribe(photo => this.curPhoto = photo);\n      }\n  }\n \n  public makeFullscreen() {\n    const i: any = document.getElementById('full-screen');\n    if (i.requestFullscreen) {\n      i.requestFullscreen();\n    } else if (i.webkitRequestFullscreen) {\n      i.webkitRequestFullscreen();\n    } else if (i.mozRequestFullScreen) {\n      i.mozRequestFullScreen();\n    } else if (i.msRequestFullscreen) {\n      i.msRequestFullscreen();\n    } \n  }\n\n  private errAlert(msg: string, err) {\n    const alertMessage = msg + err.error;\n    const dialogRef = this.dialog.open(AlertMessageDialogComponent, {\n      width: '400px',\n      data: {alertMessage: alertMessage}\n    });\n    dialogRef.afterClosed().subscribe(result => {});\n    console.log(err);\n    this.router.navigate(['/gallery']);\n  };\n\n\n}","module.exports = \"<p>\\n  gallery-video-albums not yet implemented!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-gallery-video-albums',\n  templateUrl: './gallery-video-albums.component.html',\n  styleUrls: ['./gallery-video-albums.component.scss']\n})\nexport class GalleryVideoAlbumsComponent implements OnInit {\n\n\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div *ngIf=\\\"auth.isAuthenticated()\\\">\\n  <h2>Select which gallery you'd like to view:</h2>\\n  <div class=\\\"container\\\"\\n     fxLayout=\\\"row\\\"\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutAlign.gt-xs=\\\"space-evenly center\\\"\\n     fxLayoutGap=\\\"10px\\\">\\n    <mat-card fxFlex=\\\"33\\\">\\n      <mat-card-header fxLayoutAlign=\\\"center center\\\">\\n        <mat-card-title>\\n          <h3 fxFlexAlign>Picture Gallery</h3>\\n        </mat-card-title>\\n      </mat-card-header>\\n      <img mat-card-image [routerLink]=\\\"['/albums']\\\" [src]=\\\"CFG.const.gallery.featuredPhoto.filename | secure\\\">\\n    </mat-card>\\n    <mat-card fxFlex=\\\"33\\\">\\n      <mat-card-header fxLayoutAlign=\\\"center center\\\">\\n        <mat-card-title>\\n          <h3>Video Gallery</h3>\\n        </mat-card-title>\\n      </mat-card-header>\\n      <img mat-card-image [routerLink]=\\\"['/videos']\\\" [src]=\\\"CFG.const.gallery.featuredVideo.filename | secure\\\">\\n    </mat-card>\\n  </div>\\n</div>\\n\"","module.exports = \"img {\\n  cursor: pointer; }\\n\\nh2, h3 {\\n  text-align: center; }\\n\\nmat-card {\\n  border-radius: 5px;\\n  border: 1px;\\n  border-color: black;\\n  border-style: ridge;\\n  padding: 10px;\\n  padding-bottom: 10px;\\n  margin-bottom: 10px; }\\n\\n[mat-card-image] {\\n  margin: 0;\\n  width: 100%; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\nimport { AuthService } from '../_services/auth.service';\nimport { AppConfig } from '../app.config';\n\n@Component({\n  selector: 'app-gallery',\n  templateUrl: './gallery.component.html',\n  styleUrls: ['./gallery.component.scss']\n})\nexport class GalleryComponent implements OnInit {\n\n  constructor(private auth: AuthService,\n              private router: Router,\n              public CFG: AppConfig) { }\n\n  ngOnInit() {\n    if (!this.auth.isAuthenticated()) { // unauthenticated!  Check stored credentials\n      if ((this.auth.hasLoggedInBefore()) && (!this.auth.isLoginExpired())) {\n        // Someone has logged in before and still has an unexpired token, so\n        // go ahead and auto-login with those saved credentials.\n        this.auth.user.username = this.auth.lastLoggedInUsername();\n        this.auth.user.level = this.auth.lastLoggedInUserLevel();\n        console.log('Auto-login for user ' + this.auth.user.username);\n      }\n      else { // if not authenticated and no stored user, then login\n        this.router.navigate(['/login']);\n      }\n    }\n  }\n\n}\n","module.exports = \"<div *ngIf=\\\"auth.isAuthenticated()\\\">\\n  <mat-toolbar class=\\\"toolbar\\\" fxFlex>\\n      <span>{{CFG.const.header.title}}</span>\\n      <a mat-button routerLink=\\\"/gallery\\\" routerLinkActive=\\\"active\\\" fxFlexOffset=\\\"1\\\" >Home</a>\\n      <a mat-button routerLink=\\\"/downloads\\\" routerLinkActive=\\\"active\\\">Downloads</a>\\n      <button mat-button [matMenuTriggerFor]=\\\"galleryMenu\\\">Gallery Menu</button>\\n      <mat-menu #galleryMenu=\\\"matMenu\\\">\\n        <button mat-menu-item routerLink=\\\"/\\\" >Gallery Home</button>\\n        <hr>\\n        <button mat-menu-item routerLink=\\\"/videos\\\" >Video Gallery</button>\\n        <button mat-menu-item routerLink=\\\"/albums\\\">Picture Gallery</button>\\n      </mat-menu>\\n      <a mat-button routerLink=\\\"/about\\\" routerLinkActive=\\\"active\\\">About</a>\\n      <span class=\\\"fill-space\\\"></span>\\n      <button mat-button [matMenuTriggerFor]=\\\"userMenu\\\">{{auth.user.username}}</button>\\n      <mat-menu #userMenu=\\\"matMenu\\\">\\n        <button mat-menu-item routerLink=\\\"/\\\" routerLinkActive=\\\"active\\\" (click)=\\\"auth.authLogout()\\\">Logout</button>\\n        <hr>\\n        <button mat-menu-item routerLink=\\\"/changepass\\\" >Change Password</button>\\n        <button *ngIf=\\\"(auth.user.level > 3)\\\" mat-menu-item routerLink=\\\"/manage\\\">Manage Users</button>\\n      </mat-menu>\\n      <!-- <a mat-button routerLink=\\\"/\\\" routerLinkActive=\\\"active\\\" (click)=\\\"auth.authLogout()\\\">Logout</a> -->\\n  </mat-toolbar>\\n</div>\\n\"","module.exports = \".mat-toolbar {\\n  margin-bottom: 0; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatMenuModule } from '@angular/material';\n\nimport { AuthService } from '../_services/auth.service';\nimport { AppConfig } from '../app.config';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private auth: AuthService, public CFG: AppConfig) { }\n\n  ngOnInit() { \n    \n  }\n\n}\n","module.exports = \"<div *ngIf=\\\"!auth.isAuthenticated()\\\">\\n  <video *ngIf=\\\"auth.hasLoggedInBefore()\\\" autoplay muted loop class=\\\"BackImage\\\">\\n    <source src=\\\"assets/video/Beach_Waves_Sunset-480p.mp4\\\" type=\\\"video/mp4\\\">\\n  </video>\\n  <img *ngIf=\\\"!auth.hasLoggedInBefore()\\\" src=\\\"assets/images/Mountain.jpg\\\" class=\\\"BackImage\\\" fxFlexFill>\\n  <div class=\\\"login-container\\\" fxLayoutAlign=\\\"center center\\\">\\n        <!-- fxLayout=\\\"row\\\"\\n        fxLayout.sm=\\\"column\\\"\\n        fxLayout.xs=\\\"column\\\" -->\\n      <form novalidate #loginForm=\\\"ngForm\\\" class=\\\"login-form\\\" fxLayout=\\\"column\\\">\\n        <mat-toolbar class=\\\"toolbar\\\">\\n          <h3 align=\\\"center\\\">Login to {{CFG.const.login.title}}</h3>\\n        </mat-toolbar>\\n        <mat-form-field>\\n          <input matInput maxlength=\\\"20\\\" placeholder=\\\"Username\\\" type=\\\"text\\\" [(ngModel)]=\\\"auth.user.username\\\" #username=\\\"ngModel\\\" name=\\\"username\\\" required>\\n          <!-- <mat-hint align=\\\"end\\\">{{input.value?.length || 0}}/20</mat-hint> -->\\n          <mat-hint>\\n            <span [hidden]=\\\"username.pristine\\\">\\n              <span [hidden]=\\\"!username.errors?.required\\\">** Username is required **</span>\\n            </span>\\n          </mat-hint>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput maxlength=\\\"30\\\" placeholder=\\\"Password\\\" [type]=\\\"hide ? 'password' : 'text'\\\" ngModel name=\\\"password\\\" #password=\\\"ngModel\\\" required>\\n          <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n          <mat-hint>\\n            <span [hidden]=\\\"password.pristine\\\">\\n              <span [hidden]=\\\"!password.errors?.required\\\">** Password is required **</span>\\n            </span>\\n          </mat-hint>\\n        </mat-form-field>\\n        <div fxLayout=\\\"row\\\">\\n          <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"openRegisterDialog()\\\">Register New User</button>\\n          <span class=\\\"fill-space\\\"></span>\\n          <button mat-raised-button type=\\\"submit\\\"\\n             color=\\\"primary\\\" [disabled]=\\\"loginForm.form.invalid\\\" (click)=\\\"onLogin(password.value)\\\" cdkFocusInitial>Login</button>\\n        </div>\\n        <a id=\\\"forgotCredentials\\\" align=\\\"center\\\" (click)=\\\"openForgotDialog()\\\">Forgot username or password</a>\\n      </form>\\n  </div>\\n\\n</div>\\n\"","module.exports = \".BackImage {\\n  position: fixed;\\n  right: 0;\\n  bottom: 0;\\n  min-width: 100%;\\n  min-height: 100%;\\n  -webkit-filter: opacity(60%);\\n          filter: opacity(60%);\\n  z-index: -1;\\n  background-position: right;\\n  background-size: cover; }\\n\\n.login-container {\\n  min-height: 100vh; }\\n\\n.login-form {\\n  min-width: 300px;\\n  background-color: white;\\n  border-radius: 5px;\\n  border: 1px;\\n  border-color: black;\\n  border-style: ridge;\\n  padding: 10px; }\\n\\n#forgotCredentials {\\n  padding-top: 10px;\\n  color: indigo; }\\n\\na {\\n  cursor: pointer; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport { Router } from '@angular/router';\n\nimport { AppConfig } from '../app.config';\nimport { User } from '../_classes/user-classes';\nimport { AuthService } from '../_services/auth.service';\nimport { RegisterComponent } from '../register/register.component';\nimport { ForgotDialogComponent } from '../forgot-dialog/forgot-dialog.component';\nimport { AlertMessageDialogComponent } from '../alert-message-dialog/alert-message-dialog.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  hide: boolean = true;\n\n  constructor(public     CFG: AppConfig,\n              private   auth: AuthService,\n              public  dialog: MatDialog,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.auth.user = new User;\n    if ((this.auth.hasLoggedInBefore()) && (!this.auth.isLoginExpired())) {\n      // Someone has logged in before and still has an unexpired token, so\n      // go ahead and auto-login with those saved credentials.\n      this.auth.user['username'] = this.auth.lastLoggedInUsername();\n      this.auth.user['level'] = Number(this.auth.lastLoggedInUserLevel());\n      this.router.navigate(['/gallery']);\n      console.log('Auto-login for user ' + this.auth.user['username']);\n    }\n  };\n\n  onLogin(password: string) {\n    // Note: I stopped binding password to auth.user.password since the auth service \n    // changes that value outside the form.  Keeping it unbound keeps the UI clean.\n    this.auth.user.password = password;\n    this.auth.authLogin().subscribe(\n      () => {\n        console.log(\"User \" + this.auth.user['username'] + \" is logged in\");\n        this.router.navigate(['/gallery']);\n      },\n      (err) => {\n        const alertMessage = 'Problem logging on: ' + err.error;\n        const dialogRef = this.dialog.open(AlertMessageDialogComponent, {\n          width: '400px',\n          data: {alertMessage: alertMessage}\n        });\n        dialogRef.afterClosed().subscribe(result => {});\n        console.log(err);\n        this.router.navigate(['/login']);\n      },\n      () => {}\n    );\n  };\n\n  onSubmitClick() {\n    this.auth.authForgot().subscribe(\n      (userReturned) => {\n        const alertMessage = 'Email \"' + userReturned['email'] + '\" was sent reset email. ' +\n          \"If you don't see it in a few minutes please check your SPAM folder.\" ;\n        const dialogRef = this.dialog.open(AlertMessageDialogComponent, {\n          width: '400px',\n          data: {alertMessage: alertMessage}\n        });\n        dialogRef.afterClosed().subscribe(result => {});\n      },\n      (err)=> {\n        const alertMessage = 'Email \"' + this.auth.user['email'] + '\" was not found!';\n        const dialogRef = this.dialog.open(AlertMessageDialogComponent, {\n          data: {alertMessage: alertMessage}\n        });\n        dialogRef.afterClosed().subscribe(result => {});\n      },\n      () => {}\n    );\n  }\n\n\n  openRegisterDialog(): void {\n    const dialogRef = this.dialog.open(RegisterComponent, {\n//      width: '600px',\n      data: {name: this.auth.user['username']}\n    });\n  }\n\n  openForgotDialog(): void {\n    const dialogRef = this.dialog.open(ForgotDialogComponent, {\n      data: {name: this.auth.user['email']}\n    });\n  }\n\n\n}\n","module.exports = \"<div class=\\\"spinner\\\" *ngIf=\\\"loading$ | async\\\">\\n    <mat-spinner></mat-spinner>\\n</div>\\n\\n<div class=\\\"manage-container\\\" [hidden]=\\\"loading$ | async\\\">\\n    <h2>Manage Users:</h2>\\n\\n    <mat-form-field>\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n    </mat-form-field>\\n      \\n    <div class=\\\"mat-elevation-z8\\\">\\n      <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n      \\n        <!-- User ID Column -->\\n        <ng-container matColumnDef=\\\"userId\\\">\\n          <th mat-header-cell *matHeaderCellDef> User ID </th>\\n          <td mat-cell *matCellDef=\\\"let user\\\"> {{user._id}} </td>\\n        </ng-container>\\n      \\n        <!-- Name Column -->\\n        <ng-container matColumnDef=\\\"name\\\">\\n          <th mat-header-cell *matHeaderCellDef> Name </th>\\n          <td mat-cell *matCellDef=\\\"let user\\\"> {{user.name}} </td>\\n        </ng-container>\\n      \\n        <!-- Username Column -->\\n        <ng-container matColumnDef=\\\"username\\\">\\n          <th mat-header-cell *matHeaderCellDef> Username </th>\\n          <td mat-cell *matCellDef=\\\"let user\\\"> {{user.username}} </td>\\n        </ng-container>\\n      \\n        <!-- Email Column -->\\n        <ng-container matColumnDef=\\\"email\\\">\\n          <th mat-header-cell *matHeaderCellDef> E-Mail </th>\\n          <td mat-cell *matCellDef=\\\"let user\\\"> {{user.email}} </td>\\n        </ng-container>\\n    \\n        <!-- Level Column -->\\n        <ng-container matColumnDef=\\\"level\\\">\\n            <th mat-header-cell *matHeaderCellDef> Level </th>\\n            <td mat-cell *matCellDef=\\\"let user\\\"> {{user.level}} </td>\\n        </ng-container>\\n          \\n        \\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"onRowClicked(row)\\\"></tr>\\n      </table>\\n      <mat-paginator [pageSize]=\\\"8\\\" [pageSizeOptions]=\\\"[5, 8, 15, 20]\\\" showFirstLastButtons></mat-paginator>\\n    </div>\\n    \\n</div>\\n\"","module.exports = \"/* Structure */\\ntable {\\n  width: 100%; }\\ntr {\\n  cursor: pointer; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CollectionViewer, DataSource } from \"@angular/cdk/collections\";\nimport { MatDialog, MatTableDataSource, MatPaginator, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Observable, BehaviorSubject, of, observable } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\nimport { MediaService } from '../_services/media.service';\nimport { AlertMessageDialogComponent } from '../alert-message-dialog/alert-message-dialog.component';\nimport { Album, Photo } from '../_classes/photo-classes';\nimport { User } from '../_classes/user-classes';\nimport { AuthService } from '../_services/auth.service';\nimport { catchError, finalize, tap, startWith, switchMap } from '../../../node_modules/rxjs/operators';\nimport { EditUserDialogComponent } from '../edit-user-dialog/edit-user-dialog.component';\nimport { nextTick } from '../../../node_modules/@types/q';\n\n@Component({\n  selector: 'app-manage-users',\n  templateUrl: './manage-users.component.html',\n  styleUrls: ['./manage-users.component.scss']\n})\nexport class ManageUsersComponent implements OnInit {\n\n  loading$ = new BehaviorSubject<boolean>(true); // will be getting initial table\n  displayedColumns: string[] = ['userId', 'name', 'username', 'email', 'level'];\n  dataSource = new MatTableDataSource<User>();\n\n  @ViewChild(MatPaginator) paginator: MatPaginator; \n\n  constructor(private  auth: AuthService, public dialog: MatDialog) {}\n\n  ngOnInit() {\n    this.dataSource.paginator = this.paginator;\n    this.auth.authGetUsers()\n    .subscribe(users => {\n      this.dataSource.data = users;\n      this.loading$.next(false);\n    })\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  onRowClicked(row) {\n    const dialogRef = this.dialog.open(EditUserDialogComponent, {\n            width: '350px',\n            data: {user: row}\n          });\n  }\n}\n","module.exports = \"<p>\\n  That page is not found.  Please report this to Darren at the link below.\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"register-container\\\" fxLayoutAlign=\\\"center center\\\">\\n      <!-- fxLayout=\\\"row\\\"\\n      fxLayout.sm=\\\"column\\\"\\n      fxLayout.xs=\\\"column\\\" -->\\n    <form novalidate #registerForm=\\\"ngForm\\\" class=\\\"register-form\\\" fxLayout=\\\"column\\\" (ngSubmit)=\\\"onRegisterClick()\\\">\\n      <mat-toolbar class=\\\"toolbar\\\">\\n        <h3 align=\\\"center\\\">Register a new user</h3>\\n      </mat-toolbar>\\n      <mat-form-field>\\n        <input matInput minlength=\\\"5\\\" maxlength=\\\"30\\\" placeholder=\\\"Full Name\\\" type=\\\"text\\\" [(ngModel)]=\\\"auth.user.name\\\" #name=\\\"ngModel\\\" name=\\\"name\\\" required>\\n        <!-- <mat-hint align=\\\"end\\\">{{input.value?.length || 0}}/20</mat-hint> -->\\n        <mat-hint>\\n          <span [hidden]=\\\"name.pristine\\\">\\n            <span [hidden]=\\\"!name.errors?.required\\\">** Full Name is required **</span>\\n          </span>\\n        </mat-hint>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput minlength=\\\"5\\\" maxlength=\\\"20\\\" placeholder=\\\"Choose a username\\\" type=\\\"text\\\" [(ngModel)]=\\\"auth.user.username\\\" #username=\\\"ngModel\\\" name=\\\"username\\\" required>\\n        <!-- <mat-hint align=\\\"end\\\">{{input.value?.length || 0}}/20</mat-hint> -->\\n        <mat-hint>\\n          <span [hidden]=\\\"username.pristine\\\">\\n            <span [hidden]=\\\"!username.errors?.required\\\">** Username is required **</span>\\n          </span>\\n        </mat-hint>\\n      </mat-form-field>\\n      <div fxLayout=\\\"column\\\" ngModelGroup=\\\"passGroup\\\" equal>  <!-- This div encloses a formGroup - making collection of two inputs \\\"password\\\" and \\\"retry\\\" -->\\n        <mat-form-field>\\n          <input matInput minlength=\\\"5\\\" maxlength=\\\"30\\\" placeholder=\\\"Choose a password\\\" [type]=\\\"hidePass ? 'password' : 'text'\\\"\\n             [(ngModel)]=\\\"auth.user.password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" required>\\n          <mat-icon matSuffix (click)=\\\"hidePass = !hidePass\\\">{{hidePass ? 'visibility' : 'visibility_off'}}</mat-icon>\\n          <mat-hint>\\n            <span [hidden]=\\\"password.pristine\\\">\\n              <span [hidden]=\\\"!password.errors?.required\\\">** Password is required **</span>\\n              <span [hidden]=\\\"!password.errors?.minlength\\\">** Minimum length is 5 characters **</span>\\n            </span>\\n          </mat-hint>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput minlength=\\\"5\\\" maxlength=\\\"30\\\" placeholder=\\\"Verify the password\\\" [type]=\\\"hideRetype ? 'password' : 'text'\\\"\\n             ngModel name=\\\"retype\\\" #retype=\\\"ngModel\\\" required>\\n          <mat-icon matSuffix (click)=\\\"hideRetype = !hideRetype\\\">{{hideRetype ? 'visibility' : 'visibility_off'}}</mat-icon>\\n          <mat-hint>\\n            <span [hidden]=\\\"retype.pristine\\\">\\n              <span [hidden]=\\\"!retype.errors?.required\\\">** Verification of the password is required **</span>\\n              <span [hidden]=\\\"!retype.errors?.minlength\\\">** Minimum length is 5 characters **</span>\\n              <span [hidden]=\\\"!registerForm.form.hasError('equal', 'passGroup')\\\"> - Passwords do not match</span>\\n            </span>\\n          </mat-hint>\\n        </mat-form-field>\\n      </div>\\n      <mat-form-field>\\n        <input matInput minlength=\\\"5\\\" maxlength=\\\"40\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" [(ngModel)]=\\\"auth.user.email\\\" #email=\\\"ngModel\\\" name=\\\"email\\\" required>\\n        <!-- <mat-hint align=\\\"end\\\">{{input.value?.length || 0}}/20</mat-hint> -->\\n        <mat-hint>\\n          <span [hidden]=\\\"email.pristine\\\">\\n            <span [hidden]=\\\"!email.errors?.required\\\">** email is required **</span>\\n            <span [hidden]=\\\"!email.errors?.minlength\\\">** Minimum length is 5 characters **</span>\\n          </span>\\n        </mat-hint>\\n      </mat-form-field>\\n      <div fxLayout=\\\"row\\\">\\n        <button mat-button mat-dialog-close>Cancel</button>\\n        <span class=\\\"fill-space\\\"></span>\\n        <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\" [disabled]=\\\"registerForm.form.invalid\\\">Register</button>\\n      </div>\\n    </form>\\n</div>\\n\"","module.exports = \".register-form {\\n  min-width: 200px;\\n  background-color: white;\\n  border-radius: 5px;\\n  border: 1px;\\n  border-color: black;\\n  border-style: ridge;\\n  padding: 10px; }\\n\\nh3 {\\n  font-size: 4.8vw; }\\n\\n@media screen and (min-width: 412px) {\\n    h3 {\\n      font-size: 25px; } }\\n\"","import { Component, OnInit, Inject, Directive, Input } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport { NG_VALIDATORS, Validator, FormGroup, AbstractControl, ValidatorFn, FormControl } from '@angular/forms';\n\nimport { User } from '../_classes/user-classes';\nimport { AuthService } from '../_services/auth.service';\nimport { EqualDirective } from '../_helpers/equal-validator';\nimport { AlertMessageDialogComponent } from '../alert-message-dialog/alert-message-dialog.component';\n\nexport interface DialogData {\n  alertMessage: string;\n}\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  hidePass: boolean = true;\n  hideRetype: boolean = true;\n\n  constructor( private auth: AuthService,\n               public dialogRef: MatDialogRef<RegisterComponent>,\n               public dialog: MatDialog,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  ngOnInit() {\n    this.auth.user = new User;\n  }\n\n  onRegisterClick() {\n    this.auth.authRegister()\n      .subscribe(user => {\n          const dialogRef = this.dialog.open(AlertMessageDialogComponent, {\n            width: '350px',\n            data: {alertMessage: 'User \"' + user.username + '\" was registered.\\n' \n              + 'Please allow a few days for the website administrator to activate this account.' }\n          });\n          dialogRef.afterClosed().subscribe(() => this.dialogRef.close());\n        },\n        (err)=> {\n          const alertMessage = 'Error: ' + err.error;\n          const dialogRef = this.dialog.open(AlertMessageDialogComponent, {\n            data: {alertMessage: alertMessage}\n          });\n          dialogRef.afterClosed().subscribe(() => {\n            this.auth.user = new User; // start fresh after error\n            this.dialogRef.close();\n          });\n        }\n      );\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  confName: 'dev'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}