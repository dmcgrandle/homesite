{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_classes/photo-classes.ts","webpack:///./src/app/_helpers/jwt-interceptor.ts","webpack:///./src/app/_helpers/secure.pipe.ts","webpack:///./src/app/_services/auth.service.ts","webpack:///./src/app/_services/url-helper.service.ts","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.scss","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/alert-message-dialog/alert-message-dialog.component.html","webpack:///./src/app/alert-message-dialog/alert-message-dialog.component.scss","webpack:///./src/app/alert-message-dialog/alert-message-dialog.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.config.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/change-password/change-password.component.html","webpack:///./src/app/change-password/change-password.component.scss","webpack:///./src/app/change-password/change-password.component.ts","webpack:///./src/app/downloads/downloads.component.html","webpack:///./src/app/downloads/downloads.component.scss","webpack:///./src/app/downloads/downloads.component.ts","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.scss","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/forgot-dialog/forgot-dialog.component.html","webpack:///./src/app/forgot-dialog/forgot-dialog.component.scss","webpack:///./src/app/forgot-dialog/forgot-dialog.component.ts","webpack:///./src/app/gallery-photo-albums-list/gallery-photo-albums-list.component.html","webpack:///./src/app/gallery-photo-albums-list/gallery-photo-albums-list.component.scss","webpack:///./src/app/gallery-photo-albums-list/gallery-photo-albums-list.component.ts","webpack:///./src/app/gallery-video-albums-list/gallery-video-albums-list.component.html","webpack:///./src/app/gallery-video-albums-list/gallery-video-albums-list.component.scss","webpack:///./src/app/gallery-video-albums-list/gallery-video-albums-list.component.ts","webpack:///./src/app/gallery/gallery.component.html","webpack:///./src/app/gallery/gallery.component.scss","webpack:///./src/app/gallery/gallery.component.ts","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.scss","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.scss","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.scss","webpack:///./src/app/register/register.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","// photo-classes.ts - Declaration of Photo and Album classes\n\nexport class Album {\n  _id: number;              // id of this PhotoAlbum - top level id == 0\n  name: string;             // Name of the album (directory name)\n  path: string;             // physical directory path of this album\n  description: string;      // Description of this album\n  featuredPhoto: Photo;     // Photo to be displayed as the album cover\n  photos: Array<Photo>;     // Photos (if any) this album contains\n  albums: Array<number>;    // array of Album id's (if any) this album contains\n\nconstructor() { \n/*  this._id = 0;\n  this.name = '';\n  this.path = '';\n  this.description = '';\n  this.featuredPhoto = {\n    filename : '',\n    caption: ''\n  }\n  this.photos = [];\n  this.albums = []; */\n}\n\n};\n\nexport class Photo {\n  filename: string;\n  caption: string;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { AuthService } from '../_services/auth.service';\nimport { Observable } from 'rxjs';\n\n@Injectable()\n\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(public auth: AuthService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    const token = this.auth.getToken();\n\n    const newRequest = request.clone({\n      headers: request.headers.set('Authorization', `Bearer ${token}`)\n    });\n    return next.handle(newRequest);\n  }\n\n}\n","import { Pipe, PipeTransform, OnDestroy, WrappedValue, ChangeDetectorRef } from '@angular/core';\nimport { Observable, Subscription, BehaviorSubject, pipe, of } from 'rxjs';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { UrlHelperService } from '../_services/url-helper.service';\n\n@Pipe({\n  name: 'secure',\n  pure: false\n})\nexport class SecurePipe implements PipeTransform, OnDestroy {\n\n  private _latestValue: any = null;\n  private _latestReturnedValue: any = null;\n  private _subscription: Subscription = null;\n  private _obj: Observable<any> = null;\n\n  private previousUrl: string;\n  private _result: BehaviorSubject<any> = new BehaviorSubject('');\n  private result: Observable<any> = this._result.asObservable();\n  private _internalSubscription: Subscription = null;\n\n  constructor(\n      private _ref: ChangeDetectorRef,\n      private urlHelperService: UrlHelperService,\n      private sanitizer: DomSanitizer\n  ) { }\n\n  ngOnDestroy(): void {\n      if (this._subscription) {\n          this._dispose();\n      }\n  }\n\n  transform(url: string): any {\n      let obj = this.internalTransform(url);\n      return this.asyncTrasnform(obj);\n  }\n\n  private internalTransform(url: string): Observable<any> {\n      if (!url) {\n          return this.result;\n      }\n\n      if (this.previousUrl !== url) {\n          this.previousUrl = url;\n          this._internalSubscription = this.urlHelperService.get(url).subscribe(m => {\n              let sanitized = this.sanitizer.bypassSecurityTrustUrl(m);\n              this._result.next(sanitized);\n          });\n      }\n\n      return this.result;\n  }\n\n  private asyncTrasnform(obj: Observable<any>): any {\n      if (!this._obj) {\n          if (obj) {\n              this._subscribe(obj);\n          }\n          this._latestReturnedValue = this._latestValue;\n          return this._latestValue;\n      }\n      if (obj !== this._obj) {\n          this._dispose();\n          return this.asyncTrasnform(obj);\n      }\n      if (this._latestValue === this._latestReturnedValue) {\n          return this._latestReturnedValue;\n      }\n      this._latestReturnedValue = this._latestValue;\n      return WrappedValue.wrap(this._latestValue);\n  }\n\n  private _subscribe(obj: Observable<any>) {\n      var _this = this;\n      this._obj = obj;\n\n      this._subscription = obj.subscribe({\n          next: function (value) {\n              return _this._updateLatestValue(obj, value);\n          }, error: (e: any) => { throw e; }\n      });\n  }\n\n  private _dispose() {\n      this._subscription.unsubscribe();\n      this._internalSubscription.unsubscribe();\n      this._internalSubscription = null;\n      this._latestValue = null;\n      this._latestReturnedValue = null;\n      this._subscription = null;\n      this._obj = null;\n  }\n\n  private _updateLatestValue(async: any, value: Object) {\n      if (async === this._obj) {\n          this._latestValue = value;\n          this._ref.markForCheck();\n      }\n  }\n}\n\n  // transform(value: any, args?: any): any {\n  //   return null;\n  // }\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject, BehaviorSubject, pipe, of } from 'rxjs';\nimport { tap, map, shareReplay } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Album, Photo } from '../_classes/photo-classes';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private _authenticated: boolean = false;\n//  private _authenticated: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  user = {};\n\n  constructor(private http: HttpClient) {\n  // set up default starting values\n    localStorage.setItem('userId', \"-1\"); //no user logged in to start with\n  }\n\n  public isAuthenticated(): boolean {\n//    return this._authenticated.value;\n    return this._authenticated;\n  }\n\n  public setAuthenticated (value: boolean) {\n//    this._authenticated.next(value);\n    this._authenticated = value;\n  }\n\n  public authLogin(): Observable<Object> {\n    return this.http.post('/api/users/login', this.user).pipe(\n      tap(res => this.storeUserResponse(res)),\n      tap(() => this.setAuthenticated(true)),\n      shareReplay()\n    );\n  }\n\n  public authRegister(): Observable<Object> {\n    return this.http.post('/api/users/create', this.user).pipe(\n      shareReplay()\n    );\n  }\n\n  public authForgot(): Observable<Object> {\n    return this.http.post('/api/users/forgot', this.user).pipe(\n      shareReplay()\n    );\n  }\n\n  public authChangePassword(token: string): Observable<Object> {\n    let body = this.user; // http body to send will be the user and the token\n    body['token'] = token;\n    return this.http.post('/api/users/changepassword', body).pipe(\n      shareReplay()\n    );\n  }\n\n  public getToken(): string {\n    return localStorage.getItem('jwtToken');\n  }\n\n  public isLoginExpired(): boolean {\n    let tokenTimeRemaining = Number(localStorage.getItem('expiresAt')) - Math.round(Date.now()/1000);\n    return (tokenTimeRemaining < 300); // If less than 5 mins (300s) remaining, log in again.\n  }\n\n  public hasLoggedInBefore(): boolean {\n    return (localStorage.getItem('successfulLogin') === 'true');\n  }\n\n  public lastLoggedInUsername(): string {\n    return localStorage.getItem('username');\n  }\n\n  public lastLoggedInUserLevel(): string {\n    return localStorage.getItem('level');\n  }\n\n  public getAlbum(id: number): Observable<any> {\n    return this.http.get('/api/photos/album/' + id);\n  }\n\n  public getAlbums(albums: Array<number>): Observable<any> {\n    let albumString = '(' + albums.join('+') + ')';\n    return this.http.get('/api/photos/albums/' + albumString);\n  }\n\n\n  public authLogout() {\n    localStorage.removeItem('username');\n    localStorage.removeItem('jwtToken');\n    localStorage.removeItem('level');\n    localStorage.removeItem('expiresAt');\n    this.setAuthenticated(false);\n    this.user = {};\n  }\n\n  private storeUserResponse(res) {\n    localStorage.setItem('username', this.user['username']);\n    localStorage.setItem('jwtToken', res.jwtToken);\n    localStorage.setItem('level', res.level);\n    localStorage.setItem('expiresAt', res.expiresAt);\n    localStorage.setItem('successfulLogin', 'true');\n/*  console.log('userId: ' + localStorage.getItem('userId'));\n    console.log('jwtToken: ' + localStorage.getItem('jwtToken'));\n    console.log('level: ' + localStorage.getItem('level'));\n    console.log('expiresAt: ' + localStorage.getItem('expiresAt')); */\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, Subscriber } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UrlHelperService {\n\n  constructor(private http: HttpClient) { }\n\n  get(url: string): Observable<any> {\n    return new Observable((observer: Subscriber<any>) => {\n      let objectUrl: string = null;\n\n      this.http.get(url, {responseType: 'blob'})\n        .subscribe(m => {\n            objectUrl = URL.createObjectURL(m);\n            observer.next(objectUrl);\n        });\n\n      return () => {\n        if (objectUrl) {\n            URL.revokeObjectURL(objectUrl);\n            objectUrl = null;\n        }\n      };\n    });\n  }\n}\n","module.exports = \"<p>\\n  about works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"alert-message-container\\\" fxLayoutAlign=\\\"center center\\\">\\n  <div fxLayout=\\\"column\\\">\\n    <mat-toolbar class=\\\"toolbar\\\" align=\\\"center\\\">\\n      <h3 >Note</h3>\\n    </mat-toolbar>\\n    <div mat-dialog-content>\\n      <p>{{data.alertMessage}}</p>\\n    </div>\\n    <div mat-dialog-actions>\\n      <!-- <button mat-raised-button color=\\\"secondary\\\" mat-dialog-close>Cancel</button> -->\\n      <span class=\\\"fill-space\\\"></span>\\n      <button mat-raised-button type=\\\"submit\\\" (click)=\\\"onOkClick()\\\" color=\\\"primary\\\" cdkFocusInitial>Ok</button>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".alert-message-container {\\n  background-color: white;\\n  border-radius: 5px;\\n  border: 1px;\\n  border-color: black;\\n  border-style: ridge;\\n  padding: 10px 10px 22px 10px; }\\n\\nh3 {\\n  font-size: 25px;\\n  flex: 1 1 auto; }\\n\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nexport interface DialogData {\n  alertMessage: string;\n}\n\n@Component({\n  selector: 'app-alert-message-dialog',\n  templateUrl: './alert-message-dialog.component.html',\n  styleUrls: ['./alert-message-dialog.component.scss']\n})\nexport class AlertMessageDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<AlertMessageDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  ngOnInit() {\n  }\n\n  onOkClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { GalleryComponent } from './gallery/gallery.component';\nimport { GalleryVideoAlbumListComponent } from './gallery-video-albums-list/gallery-video-albums-list.component';\nimport { GalleryPhotoAlbumsListComponent } from './gallery-photo-albums-list/gallery-photo-albums-list.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { AboutComponent } from './about/about.component';\nimport { DownloadsComponent } from './downloads/downloads.component';\n\nconst appRoutes: Routes = [\n    { path: 'gallery', component: GalleryComponent },\n    { path: 'videos', component: GalleryVideoAlbumListComponent },\n    { path: 'photo-albums', component: GalleryPhotoAlbumsListComponent },\n    { path: 'downloads', component: DownloadsComponent },\n    { path: 'changepass/:username/:token', component: ChangePasswordComponent },\n    { path: 'about', component: AboutComponent },\n    { path: 'login', component: LoginComponent },\n    { path: '', redirectTo: 'login', pathMatch: 'full' },\n    { path: '**', component: PageNotFoundComponent }\n  ];\n\n  @NgModule({\n    imports: [\n        RouterModule.forRoot(\n            appRoutes\n        )\n    ],\n    exports: [\n        RouterModule\n    ]\n  })\n  export class AppRoutingModule {}","module.exports = \"<!-- <app-login></app-login> -->\\n<app-header></app-header>\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'McGrandle.com';\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../environments/environment';\nimport { IAppConfig } from './app.config.model';\n\n@Injectable()\nexport class AppConfig {\n\n    public settings :IAppConfig;\n\n    constructor(private http: HttpClient) {}\n\n    load() {\n        const jsonFile = `assets/config/config.${environment.confName}.json`;\n        return new Promise<void>((resolve, reject) => { \n            this.http.get(jsonFile).subscribe(\n                (res) => {\n                    this.settings = <IAppConfig>res;\n                    resolve();\n                },\n                (err) => reject('Could not load file ' + jsonFile + ': ' + JSON.stringify(err))\n            )\n        });\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n//for configuration file read during initialization:\nimport { APP_INITIALIZER } from '@angular/core';\nimport { AppConfig } from './app.config';\n\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { MatButtonModule, MatCheckboxModule, MatDatepickerModule, MatFormFieldModule,\n  MatInputModule, MatRadioModule, MatSelectModule, MatSliderModule,\n  MatSlideToggleModule, MatToolbarModule, MatListModule, MatGridListModule,\n  MatCardModule, MatIconModule, MatProgressSpinnerModule, MatDialogModule, MatMenuModule } from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport 'hammerjs';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { LoginComponent } from './login/login.component';\nimport { AlertMessageDialogComponent } from './alert-message-dialog/alert-message-dialog.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ForgotDialogComponent } from './forgot-dialog/forgot-dialog.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { GalleryComponent } from './gallery/gallery.component';\nimport { GalleryVideoAlbumListComponent } from './gallery-video-albums-list/gallery-video-albums-list.component';\nimport { GalleryPhotoAlbumsListComponent } from './gallery-photo-albums-list/gallery-photo-albums-list.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { AboutComponent } from './about/about.component';\nimport { DownloadsComponent } from './downloads/downloads.component';\n\nimport { AuthService } from './_services/auth.service';\nimport { UrlHelperService } from './_services/url-helper.service';\n\nimport { JwtInterceptor } from './_helpers/jwt-interceptor';\nimport { SecurePipe } from './_helpers/secure.pipe';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    LoginComponent,\n    AlertMessageDialogComponent,\n    RegisterComponent,\n    ForgotDialogComponent,\n    ChangePasswordComponent,\n    GalleryComponent,\n    GalleryVideoAlbumListComponent,\n    GalleryPhotoAlbumsListComponent,\n    PageNotFoundComponent,\n    AboutComponent,\n    DownloadsComponent,\n    SecurePipe\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    MatButtonModule, MatCheckboxModule, MatDatepickerModule, MatFormFieldModule,\n    MatInputModule, MatRadioModule, MatSelectModule, MatSliderModule,\n    MatSlideToggleModule, MatToolbarModule, MatListModule, MatGridListModule,\n    MatCardModule, MatIconModule, MatProgressSpinnerModule, MatDialogModule,\n    FlexLayoutModule, MatMenuModule\n  ],\n  providers: [\n    AppConfig, {\n      provide: APP_INITIALIZER,\n      useFactory: loadConfigDuringInit,\n      deps: [AppConfig],\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptor,\n      multi: true\n  }],\n  entryComponents: [\n    RegisterComponent, ForgotDialogComponent, AlertMessageDialogComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\nexport function loadConfigDuringInit(appConfig: AppConfig) {\n  return () => appConfig.load();\n}\n","module.exports = \"<div *ngIf=\\\"!auth.isAuthenticated()\\\">\\n  <!-- <video autoplay muted loop id=\\\"BackImage\\\">\\n    <source src=\\\"assets/video/Piano480p.mp4\\\" type=\\\"video/mp4\\\">\\n  </video> -->\\n  <img src=\\\"assets/images/Mountain.jpg\\\" id=\\\"BackImage\\\" fxFlexFill>\\n  <div class=\\\"change-password-container\\\" fxLayoutAlign=\\\"center center\\\">\\n        <!-- fxLayout=\\\"row\\\"\\n        fxLayout.sm=\\\"column\\\"\\n        fxLayout.xs=\\\"column\\\" -->\\n      <form novalidate #changePasswordForm=\\\"ngForm\\\" class=\\\"change-password-form\\\" fxLayout=\\\"column\\\">\\n        <mat-toolbar class=\\\"toolbar\\\">\\n          <h3 align=\\\"center\\\">Change your password</h3>\\n        </mat-toolbar>\\n        <p>Changing password for user: {{ auth.user.username }}</p>\\n        <mat-form-field>\\n          <input matInput maxlength=\\\"30\\\" placeholder=\\\"Password\\\" [type]=\\\"hidePassword ? 'password' : 'text'\\\"\\n            [(ngModel)]=\\\"auth.user.password\\\" #password=\\\"ngModel\\\" name=\\\"password\\\" required>\\n          <!-- <mat-hint align=\\\"end\\\">{{input.value?.length || 0}}/20</mat-hint> -->\\n          <mat-icon matSuffix (click)=\\\"hidePassword = !hidePassword\\\">{{hidePassword ? 'visibility' : 'visibility_off'}}</mat-icon>\\n          <mat-hint>\\n            <span [hidden]=\\\"password.pristine\\\">\\n              <span [hidden]=\\\"!password.errors?.required\\\">** Password is required **</span>\\n            </span>\\n          </mat-hint>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput maxlength=\\\"30\\\" placeholder=\\\"Re-Enter your password\\\" [type]=\\\"hidePassCheck ? 'password' : 'text'\\\"\\n             [(ngModel)]=\\\"auth.user.passcheck\\\"\\n             name=\\\"passcheck\\\" #passcheck=\\\"ngModel\\\" required>\\n          <mat-icon matSuffix (click)=\\\"hidePassCheck = !hidePassCheck\\\">{{hidePassCheck ? 'visibility' : 'visibility_off'}}</mat-icon>\\n          <mat-hint>\\n            <span [hidden]=\\\"passcheck.pristine\\\">\\n              <span [hidden]=\\\"!passcheck.errors?.required\\\">** Password Check is required **</span>\\n            </span>\\n          </mat-hint>\\n        </mat-form-field>\\n        <div fxLayout=\\\"row\\\">\\n          <span class=\\\"fill-space\\\"></span>\\n          <button mat-raised-button type=\\\"submit\\\"\\n             color=\\\"primary\\\" [disabled]=\\\"(auth.user.password != auth.user.passcheck)\\\" (click)=\\\"onChangePassword()\\\">Change Password</button>\\n        </div>\\n      </form>\\n  </div>\\n\\n</div>\\n\"","module.exports = \"#BackImage {\\n  position: fixed;\\n  right: 0;\\n  bottom: 0;\\n  min-width: 100%;\\n  min-height: 100%;\\n  -webkit-filter: opacity(60%);\\n          filter: opacity(60%);\\n  z-index: -1;\\n  background-position: right;\\n  background-size: cover; }\\n\\n.change-password-container {\\n  min-height: 100vh; }\\n\\n.change-password-form {\\n  min-width: 300px;\\n  background-color: white;\\n  border-radius: 5px;\\n  border: 1px;\\n  border-color: black;\\n  border-style: ridge;\\n  padding: 10px; }\\n\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nimport { AuthService } from '../_services/auth.service';\nimport { AlertMessageDialogComponent } from '../alert-message-dialog/alert-message-dialog.component';\n\nexport interface DialogData {\n  alertMessage: string;\n}\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss']\n})\nexport class ChangePasswordComponent implements OnInit {\n\n  hidePassword: boolean = true;\n  hidePassCheck: boolean = true;\n  token: string;\n  alertMessage: string;\n\n  constructor(private auth: AuthService,\n              private route: ActivatedRoute,\n              private router: Router,\n              public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.auth.user = {};  // first clear out any old user info\n    this.auth.user['username'] = this.route.snapshot.paramMap.get('username');\n    this.token = this.route.snapshot.paramMap.get('token');\n  }\n\n  onChangePassword() {\n    this.auth.authChangePassword(this.token).subscribe(\n      (result) => {\n        this.alertMessage = 'Password changed for \"' + this.auth.user['username'] + '\"';\n        const dialogRef = this.dialog.open(AlertMessageDialogComponent, {\n          data: {alertMessage: this.alertMessage}\n        });\n        dialogRef.afterClosed().subscribe(result => {});\n        console.log(\"Password changed for user: \" + this.auth.user['username']);\n        this.router.navigate(['/login']);\n      },\n      (err)=>console.log(err),\n      () => {}\n    );\n  }\n\n}\n","module.exports = \"<p>\\n  downloads not yet implemented!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-downloads',\n  templateUrl: './downloads.component.html',\n  styleUrls: ['./downloads.component.scss']\n})\nexport class DownloadsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div *ngIf=\\\"auth.isAuthenticated()\\\">\\n  <mat-toolbar class=\\\"toolbar\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"0px\\\" fxLayoutAlign=\\\"center center\\\">\\n      <h2>{{CFG.settings.footer.title}}</h2>\\n      <p>Contact <a href=\\\"mailto:{{CFG.settings.footer.email}}\\\">{{CFG.settings.footer.email}}</a> with any issues.</p>\\n  </mat-toolbar>\\n</div>\\n\"","module.exports = \"p {\\n  font-size: 12px;\\n  margin: -5px 0 0 0; }\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from '../_services/auth.service';\nimport { AppConfig } from '../app.config';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor(private auth: AuthService,\n              public CFG: AppConfig) { }\n\n  ngOnInit() { }\n\n}\n","module.exports = \"<div class=\\\"register-container\\\" fxLayoutAlign=\\\"center center\\\">\\n      <!-- fxLayout=\\\"row\\\"\\n      fxLayout.sm=\\\"column\\\"\\n      fxLayout.xs=\\\"column\\\" -->\\n    <form novalidate #forgotDialogForm=\\\"ngForm\\\" class=\\\"forgot-dialog-form\\\" fxLayout=\\\"column\\\" (ngSubmit)=\\\"onSubmitClick()\\\">\\n      <mat-toolbar class=\\\"toolbar\\\">\\n        <h3 align=\\\"center\\\">Forgot username/password</h3>\\n      </mat-toolbar>\\n        <p>Whether you forgot your username OR your password, simply input your email address\\n           below and an email will be sent to you with your username and a link to reset\\n           your password.</p>\\n      <mat-form-field>\\n        <input matInput maxlength=\\\"40\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" [(ngModel)]=\\\"auth.user.email\\\" #email=\\\"ngModel\\\" name=\\\"email\\\" required>\\n        <!-- <mat-hint align=\\\"end\\\">{{input.value?.length || 0}}/20</mat-hint> -->\\n        <mat-hint>\\n          <span [hidden]=\\\"email.pristine\\\">\\n            <span [hidden]=\\\"!email.errors?.required\\\">** email is required **</span>\\n          </span>\\n        </mat-hint>\\n      </mat-form-field>\\n      <div fxLayout=\\\"row\\\">\\n        <button mat-button mat-dialog-close>Cancel</button>\\n        <span class=\\\"fill-space\\\"></span>\\n        <button mat-raised-button routerLink=\\\"/login\\\" routerLinkActive=\\\"active\\\" type=\\\"submit\\\" color=\\\"primary\\\" [disabled]=\\\"forgotDialogForm.form.invalid\\\">Submit</button>\\n      </div>\\n    </form>\\n</div>\\n\"","module.exports = \".forgot-dialog-form {\\n  min-width: 250px;\\n  max-width: 500px;\\n  background-color: white;\\n  border-radius: 5px;\\n  border: 1px;\\n  border-color: black;\\n  border-style: ridge;\\n  padding: 10px;\\n  padding-bottom: 20px; }\\n\\nh3 {\\n  font-size: 4.3vw; }\\n\\n@media screen and (min-width: 680px) {\\n    h3 {\\n      font-size: 30px; } }\\n\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\n\nimport { AuthService } from '../_services/auth.service';\nimport { AlertMessageDialogComponent } from '../alert-message-dialog/alert-message-dialog.component';\n\nexport interface DialogData {\n  username: string;\n}\n\n@Component({\n  selector: 'app-forgot-dialog',\n  templateUrl: './forgot-dialog.component.html',\n  styleUrls: ['./forgot-dialog.component.scss']\n})\nexport class ForgotDialogComponent implements OnInit {\n\n  token : string;\n  error: boolean = false;\n\n  constructor(\n    private auth: AuthService,\n    public dialogRef: MatDialogRef<ForgotDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private activatedRoute: ActivatedRoute,\n    public dialog: MatDialog) {\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmitClick() {\n    this.auth.authForgot().subscribe(\n      (userReturned) => {\n        const alertMessage = 'Email \"' + userReturned['email'] + '\" was sent reset email. ' +\n          \"If you don't see it in a few minutes please check your SPAM folder.\" ;\n        const dialogRef = this.dialog.open(AlertMessageDialogComponent, {\n          width: '400px',\n          data: {alertMessage: alertMessage}\n        });\n        dialogRef.afterClosed().subscribe(result => {});\n      },\n      (err)=> {\n        const alertMessage = 'Email \"' + this.auth.user['email'] + '\" was not found!';\n        const dialogRef = this.dialog.open(AlertMessageDialogComponent, {\n          data: {alertMessage: alertMessage}\n        });\n        dialogRef.afterClosed().subscribe(result => {});\n      },\n      () => {}\n    );\n    this.dialogRef.close();\n  }\n\n\n}\n","module.exports = \"<div *ngIf=\\\"currentAlbums\\\">\\n  <h2>{{currentAlbum.name}}:</h2>\\n  <div class=\\\"container\\\"\\n    fxLayout=\\\"row wrap\\\"\\n    fxLayoutGap=\\\"4px\\\"\\n    fxLayoutAlign.gt-xs=\\\"space-evenly stretch\\\">\\n    <mat-card *ngFor=\\\"let album of currentAlbums\\\" (click)=\\\"navToAlbum(album)\\\"\\n      fxFlex.xl=\\\"16.2%\\\" fxFlex.lg=\\\"24.5%\\\" fxFlex.md=\\\"32.5%\\\" fxFlex.sm=\\\"49%\\\" fxFlex.xs=\\\"98%\\\">\\n      <mat-card-header>\\n        <mat-card-title>\\n          <h3 fxFlexAlign>{{album.name}}</h3>\\n        </mat-card-title>\\n        <mat-card-subtitle>{{album.description}}</mat-card-subtitle>\\n      </mat-card-header>\\n      <div fxFill fxLayout=\\\"center center\\\">\\n        <img mat-card-image [src]='(\\\"/protected/images/\\\"+album.featuredPhoto.filename) | secure'>\\n      </div>\\n      <mat-card-footer>\\n      </mat-card-footer>\\n    </mat-card>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"!currentAlbums\\\">\\n  <p>Waiting on server ...</p>\\n</div>\\n\\n\"","module.exports = \".mat-card {\\n  border-radius: 5px;\\n  border: 1px;\\n  border-color: black;\\n  border-style: ridge;\\n  padding: 10px 10px 30px 10px;\\n  margin-bottom: 5px;\\n  cursor: pointer; }\\n\\n[mat-card-image] {\\n  margin: 0 0 30px 0;\\n  width: 100%;\\n  -ms-grid-row-align: center;\\n      align-self: center;\\n  border-radius: 5px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../_services/auth.service';\nimport { AlertMessageDialogComponent } from '../alert-message-dialog/alert-message-dialog.component';\nimport { Album, Photo } from '../_classes/photo-classes';\nimport { error } from '../../../node_modules/protractor';\n//import { ROOT_ALBUMLIST } from '../_classes/photo-albums-temp';\n\n@Component({\n  selector: 'app-gallery-photo-albums-list',\n  templateUrl: './gallery-photo-albums-list.component.html',\n  styleUrls: ['./gallery-photo-albums-list.component.scss']\n})\nexport class GalleryPhotoAlbumsListComponent implements OnInit {\n\n  currentAlbum : Album;\n  currentAlbums : Array<Album>;\n\n  constructor(private auth: AuthService, \n              private router: Router, \n              public dialog: MatDialog,) { }\n\n  ngOnInit() {\n    this.currentAlbum = new Album;\n    this.auth.getAlbum(0).subscribe(\n      (album) => {\n        this.currentAlbum = album;\n        this.auth.getAlbums(this.currentAlbum.albums).subscribe(\n          (albums) => this.currentAlbums = albums,\n          (err) => this.errAlert('Problem getting albums!', err)\n        );\n      },\n      (err) => this.errAlert('Problem getting album zero!', err),\n      () => {}\n    );\n }\n\n  navToAlbum(album: Album) {\n    if (album.albums) {// means this album contains other albums\n      this.currentAlbum = album;\n      this.auth.getAlbums(album.albums).subscribe(\n        (albums) => this.currentAlbums = albums,\n        (err) => this.errAlert('Problem getting albums!', err)\n      );\n    } else { // not an album of albums!  Navigate to photos\n      this.router.navigate(['/gallery']);\n    }\n\n  };\n\nprivate errAlert(msg: string, err) {\n  const alertMessage = msg + err.error;\n  const dialogRef = this.dialog.open(AlertMessageDialogComponent, {\n    width: '400px',\n    data: {alertMessage: alertMessage}\n  });\n  dialogRef.afterClosed().subscribe(result => {});\n  console.log(err);\n  this.router.navigate(['/gallery']);\n  }\n\n}\n","module.exports = \"<p>\\n  gallery-video-albums-list not yet implemented!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-gallery-video-albums-list',\n  templateUrl: './gallery-video-albums-list.component.html',\n  styleUrls: ['./gallery-video-albums-list.component.scss']\n})\nexport class GalleryVideoAlbumListComponent implements OnInit {\n\n\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div *ngIf=\\\"auth.isAuthenticated()\\\">\\n  <h2>Select which gallery you'd like to view:</h2>\\n  <div class=\\\"container\\\"\\n     fxLayout=\\\"row\\\"\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutAlign.gt-xs=\\\"space-evenly center\\\"\\n     fxLayoutGap=\\\"10px\\\">\\n    <mat-card fxFlex=\\\"33\\\">\\n      <mat-card-header fxLayoutAlign=\\\"center center\\\">\\n        <mat-card-title>\\n          <h3 fxFlexAlign>Picture Gallery</h3>\\n        </mat-card-title>\\n      </mat-card-header>\\n      <img mat-card-image [routerLink]=\\\"['/photo-albums']\\\" [src]=\\\"CFG.settings.gallery.featuredPhoto.filename | secure\\\">\\n    </mat-card>\\n    <mat-card fxFlex=\\\"33\\\">\\n      <mat-card-header fxLayoutAlign=\\\"center center\\\">\\n        <mat-card-title>\\n          <h3>Video Gallery</h3>\\n        </mat-card-title>\\n      </mat-card-header>\\n      <img mat-card-image [routerLink]=\\\"['/videos']\\\" [src]=\\\"CFG.settings.gallery.featuredVideo.filename | secure\\\">\\n    </mat-card>\\n  </div>\\n</div>\\n\"","module.exports = \"img {\\n  cursor: pointer; }\\n\\nh2, h3 {\\n  text-align: center; }\\n\\nmat-card {\\n  border-radius: 5px;\\n  border: 1px;\\n  border-color: black;\\n  border-style: ridge;\\n  padding: 10px;\\n  padding-bottom: 10px;\\n  margin-bottom: 10px; }\\n\\n[mat-card-image] {\\n  margin: 0;\\n  width: 100%; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../_services/auth.service';\nimport { AppConfig } from '../app.config';\n\n@Component({\n  selector: 'app-gallery',\n  templateUrl: './gallery.component.html',\n  styleUrls: ['./gallery.component.scss']\n})\nexport class GalleryComponent implements OnInit {\n\n  constructor(private auth: AuthService,\n              private router: Router,\n              public CFG: AppConfig) { }\n\n  ngOnInit() {\n    if (!this.auth.isAuthenticated()) { // unauthenticated!  Check stored credentials\n      if ((this.auth.hasLoggedInBefore()) && (!this.auth.isLoginExpired())) {\n        // Someone has logged in before and still has an unexpired token, so\n        // go ahead and auto-login with those saved credentials.\n        this.auth.user['username'] = this.auth.lastLoggedInUsername();\n        this.auth.user['level'] = Number(this.auth.lastLoggedInUserLevel());\n        this.auth.setAuthenticated(true);\n        console.log('Auto-login for user ' + this.auth.user['username']);\n      }\n      else { // if not authenticated and no stored user, then login\n        this.router.navigate(['/login']);\n      }\n    }\n  }\n\n}\n","module.exports = \"<div *ngIf=\\\"auth.isAuthenticated()\\\">\\n  <mat-toolbar class=\\\"toolbar\\\" fxFlex>\\n      <span>{{CFG.settings.header.title}}</span>\\n      <a mat-button routerLink=\\\"/gallery\\\" routerLinkActive=\\\"active\\\" fxFlexOffset=\\\"1\\\" >Home</a>\\n      <a mat-button routerLink=\\\"/downloads\\\" routerLinkActive=\\\"active\\\">Downloads</a>\\n      <button mat-button [matMenuTriggerFor]=\\\"galleryMenu\\\">Gallery Menu</button>\\n      <mat-menu #galleryMenu=\\\"matMenu\\\">\\n        <button mat-menu-item routerLink=\\\"/\\\" >Gallery Home</button>\\n        <hr>\\n        <button mat-menu-item routerLink=\\\"/videos\\\" >Video Gallery</button>\\n        <button mat-menu-item routerLink=\\\"/pictures\\\">Picture Gallery</button>\\n      </mat-menu>\\n      <a mat-button routerLink=\\\"/about\\\" routerLinkActive=\\\"active\\\">About</a>\\n      <span class=\\\"fill-space\\\"></span>\\n      <a mat-button routerLink=\\\"/\\\" routerLinkActive=\\\"active\\\" (click)=\\\"auth.authLogout()\\\">Logout</a>\\n  </mat-toolbar>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { MatMenuModule } from '@angular/material';\n\nimport { AuthService } from '../_services/auth.service';\nimport { AppConfig } from '../app.config';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private auth: AuthService, public CFG: AppConfig) { }\n\n  ngOnInit() { }\n\n}\n","module.exports = \"<div *ngIf=\\\"!auth.isAuthenticated()\\\">\\n  <video *ngIf=\\\"auth.hasLoggedInBefore()\\\" autoplay muted loop id=\\\"BackImage\\\">\\n    <source src=\\\"assets/video/Beach_Waves_Sunset-480p.mp4\\\" type=\\\"video/mp4\\\">\\n  </video>\\n  <img *ngIf=\\\"!auth.hasLoggedInBefore()\\\" src=\\\"assets/images/Mountain.jpg\\\" id=\\\"BackImage\\\" fxFlexFill>\\n  <div class=\\\"login-container\\\" fxLayoutAlign=\\\"center center\\\">\\n        <!-- fxLayout=\\\"row\\\"\\n        fxLayout.sm=\\\"column\\\"\\n        fxLayout.xs=\\\"column\\\" -->\\n      <form novalidate #loginForm=\\\"ngForm\\\" class=\\\"login-form\\\" fxLayout=\\\"column\\\">\\n        <mat-toolbar class=\\\"toolbar\\\">\\n          <h3 align=\\\"center\\\">Login to www.McGrandle.com</h3>\\n        </mat-toolbar>\\n        <mat-form-field>\\n          <input matInput maxlength=\\\"20\\\" placeholder=\\\"Username\\\" type=\\\"text\\\" [(ngModel)]=\\\"auth.user.username\\\" #username=\\\"ngModel\\\" name=\\\"username\\\" required>\\n          <!-- <mat-hint align=\\\"end\\\">{{input.value?.length || 0}}/20</mat-hint> -->\\n          <mat-hint>\\n            <span [hidden]=\\\"username.pristine\\\">\\n              <span [hidden]=\\\"!username.errors?.required\\\">** Username is required **</span>\\n            </span>\\n          </mat-hint>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput maxlength=\\\"30\\\" placeholder=\\\"Password\\\" [type]=\\\"hide ? 'password' : 'text'\\\"\\n             [(ngModel)]=\\\"auth.user.password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" required>\\n          <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n          <mat-hint>\\n            <span [hidden]=\\\"password.pristine\\\">\\n              <span [hidden]=\\\"!password.errors?.required\\\">** Password is required **</span>\\n            </span>\\n          </mat-hint>\\n        </mat-form-field>\\n        <div fxLayout=\\\"row\\\">\\n          <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"openRegisterDialog()\\\">Register New User</button>\\n          <span class=\\\"fill-space\\\"></span>\\n          <button mat-raised-button type=\\\"submit\\\"\\n             color=\\\"primary\\\" [disabled]=\\\"loginForm.form.invalid\\\" (click)=\\\"onLogin()\\\" cdkFocusInitial>Login</button>\\n        </div>\\n        <a id=\\\"forgotCredentials\\\" align=\\\"center\\\" (click)=\\\"openForgotDialog()\\\">Forgot username or password</a>\\n      </form>\\n  </div>\\n\\n</div>\\n\"","module.exports = \"#BackImage {\\n  position: fixed;\\n  right: 0;\\n  bottom: 0;\\n  min-width: 100%;\\n  min-height: 100%;\\n  -webkit-filter: opacity(60%);\\n          filter: opacity(60%);\\n  z-index: -1;\\n  background-position: right;\\n  background-size: cover; }\\n\\n.login-container {\\n  min-height: 100vh; }\\n\\n.login-form {\\n  min-width: 300px;\\n  background-color: white;\\n  border-radius: 5px;\\n  border: 1px;\\n  border-color: black;\\n  border-style: ridge;\\n  padding: 10px; }\\n\\n#forgotCredentials {\\n  padding-top: 10px;\\n  color: indigo; }\\n\\na {\\n  cursor: pointer; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../_services/auth.service';\nimport { RegisterComponent } from '../register/register.component';\nimport { ForgotDialogComponent } from '../forgot-dialog/forgot-dialog.component';\nimport { AlertMessageDialogComponent } from '../alert-message-dialog/alert-message-dialog.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  hide: boolean = true;\n\n  constructor(private auth: AuthService,\n              public dialog: MatDialog,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.auth.user = {};\n    if ((this.auth.hasLoggedInBefore()) && (!this.auth.isLoginExpired())) {\n      // Someone has logged in before and still has an unexpired token, so\n      // go ahead and auto-login with those saved credentials.\n      this.auth.user['username'] = this.auth.lastLoggedInUsername();\n      this.auth.user['level'] = Number(this.auth.lastLoggedInUserLevel());\n      this.auth.setAuthenticated(true);\n      this.router.navigate(['/gallery']);\n      console.log('Auto-login for user ' + this.auth.user['username']);\n    }\n  };\n\n  onLogin() {\n    this.auth.authLogin().subscribe(\n      () => {\n        console.log(\"User \" + this.auth.user['username'] + \" is logged in\");\n        this.router.navigate(['/gallery']);\n      },\n      (err) => {\n        const alertMessage = 'Problem logging on: ' + err.error;\n        const dialogRef = this.dialog.open(AlertMessageDialogComponent, {\n          width: '400px',\n          data: {alertMessage: alertMessage}\n        });\n        dialogRef.afterClosed().subscribe(result => {});\n        console.log(err);\n        this.router.navigate(['/login']);\n      },\n      () => {}\n    );\n  };\n\n  onSubmitClick() {\n    this.auth.authForgot().subscribe(\n      (userReturned) => {\n        const alertMessage = 'Email \"' + userReturned['email'] + '\" was sent reset email. ' +\n          \"If you don't see it in a few minutes please check your SPAM folder.\" ;\n        const dialogRef = this.dialog.open(AlertMessageDialogComponent, {\n          width: '400px',\n          data: {alertMessage: alertMessage}\n        });\n        dialogRef.afterClosed().subscribe(result => {});\n      },\n      (err)=> {\n        const alertMessage = 'Email \"' + this.auth.user['email'] + '\" was not found!';\n        const dialogRef = this.dialog.open(AlertMessageDialogComponent, {\n          data: {alertMessage: alertMessage}\n        });\n        dialogRef.afterClosed().subscribe(result => {});\n      },\n      () => {}\n    );\n  }\n\n\n  openRegisterDialog(): void {\n    const dialogRef = this.dialog.open(RegisterComponent, {\n      data: {name: this.auth.user['username']}\n    });\n  }\n\n  openForgotDialog(): void {\n    const dialogRef = this.dialog.open(ForgotDialogComponent, {\n      data: {name: this.auth.user['email']}\n    });\n  }\n\n\n}\n","module.exports = \"<p>\\n  That page is not found.  Please report this to Darren at the link below.\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"register-container\\\" fxLayoutAlign=\\\"center center\\\">\\n      <!-- fxLayout=\\\"row\\\"\\n      fxLayout.sm=\\\"column\\\"\\n      fxLayout.xs=\\\"column\\\" -->\\n    <form novalidate #registerForm=\\\"ngForm\\\" class=\\\"register-form\\\" fxLayout=\\\"column\\\" (ngSubmit)=\\\"onRegisterClick()\\\">\\n      <mat-toolbar class=\\\"toolbar\\\">\\n        <h3 align=\\\"center\\\">Register a new user</h3>\\n      </mat-toolbar>\\n      <mat-form-field>\\n        <input matInput maxlength=\\\"30\\\" placeholder=\\\"Full Name\\\" type=\\\"text\\\" [(ngModel)]=\\\"auth.user.name\\\" #name=\\\"ngModel\\\" name=\\\"name\\\" required>\\n        <!-- <mat-hint align=\\\"end\\\">{{input.value?.length || 0}}/20</mat-hint> -->\\n        <mat-hint>\\n          <span [hidden]=\\\"name.pristine\\\">\\n            <span [hidden]=\\\"!name.errors?.required\\\">** Full Name is required **</span>\\n          </span>\\n        </mat-hint>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput maxlength=\\\"20\\\" placeholder=\\\"Choose a username\\\" type=\\\"text\\\" [(ngModel)]=\\\"auth.user.username\\\" #username=\\\"ngModel\\\" name=\\\"username\\\" required>\\n        <!-- <mat-hint align=\\\"end\\\">{{input.value?.length || 0}}/20</mat-hint> -->\\n        <mat-hint>\\n          <span [hidden]=\\\"username.pristine\\\">\\n            <span [hidden]=\\\"!username.errors?.required\\\">** Username is required **</span>\\n          </span>\\n        </mat-hint>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput maxlength=\\\"30\\\" placeholder=\\\"Choose a password\\\" [type]=\\\"hidePass ? 'password' : 'text'\\\"\\n           [(ngModel)]=\\\"auth.user.password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" required>\\n        <mat-icon matSuffix (click)=\\\"hidePass = !hidePass\\\">{{hidePass ? 'visibility' : 'visibility_off'}}</mat-icon>\\n        <mat-hint>\\n          <span [hidden]=\\\"password.pristine\\\">\\n            <span [hidden]=\\\"!password.errors?.required\\\">** Password is required **</span>\\n          </span>\\n        </mat-hint>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput maxlength=\\\"40\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" [(ngModel)]=\\\"auth.user.email\\\" #email=\\\"ngModel\\\" name=\\\"email\\\" required>\\n        <!-- <mat-hint align=\\\"end\\\">{{input.value?.length || 0}}/20</mat-hint> -->\\n        <mat-hint>\\n          <span [hidden]=\\\"email.pristine\\\">\\n            <span [hidden]=\\\"!email.errors?.required\\\">** email is required **</span>\\n          </span>\\n        </mat-hint>\\n      </mat-form-field>\\n      <div fxLayout=\\\"row\\\">\\n        <button mat-button mat-dialog-close>Cancel</button>\\n        <span class=\\\"fill-space\\\"></span>\\n        <button mat-raised-button routerLink=\\\"/gallery\\\" routerLinkActive=\\\"active\\\" type=\\\"submit\\\" color=\\\"primary\\\" [disabled]=\\\"registerForm.form.invalid\\\">Register</button>\\n      </div>\\n    </form>\\n</div>\\n\"","module.exports = \".register-form {\\n  min-width: 200px;\\n  background-color: white;\\n  border-radius: 5px;\\n  border: 1px;\\n  border-color: black;\\n  border-style: ridge;\\n  padding: 10px; }\\n\\nh3 {\\n  font-size: 4.8vw; }\\n\\n@media screen and (min-width: 412px) {\\n    h3 {\\n      font-size: 25px; } }\\n\"","import { Component, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\n\nimport { AuthService } from '../_services/auth.service';\n\nexport interface DialogData {\n  username: string;\n}\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n\n  hidePass: boolean = true;\n\n  constructor(\n    private auth: AuthService,\n    public dialogRef: MatDialogRef<RegisterComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  onRegisterClick() {\n    this.auth.authRegister().subscribe(\n      (data) => {\n        console.log(\"User \" + this.auth.user['username'] + \" was created successfully\");\n      },\n      (err)=>console.log(err),\n      () => {}\n    );\n    this.dialogRef.close();\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  confName: 'dev'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}